{"remainingRequest":"/Users/Jiama003/company/kfservices/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Jiama003/company/kfservices/src/components/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Jiama003/company/kfservices/src/components/index.vue","mtime":1560860676477},{"path":"/Users/Jiama003/company/kfservices/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Jiama003/company/kfservices/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Jiama003/company/kfservices/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {mapState} from 'vuex'\nimport * as types from '@/store/mutation-types'\nimport Api from '../assets/js/api'\nimport axios from 'axios'\nimport utils from '../assets/js/utils'\nimport { setTimeout, setInterval } from 'timers';\nimport { async } from 'q';\nexport default {\n  beforeRouteEnter (to, from, next) {\n    console.log(to.path)\n    let url = window.location.href.split('?')[1] || \"\"\n    //获取url参数 存到session\n    if(url&&url!==\"\"){\n      url.split('&').forEach(item=>{\n        let query = item.split('=')\n        sessionStorage.setItem(query[0],query[1])\n      })\n    }\n    next()\n  },\n  created(){\n    //获取个人信息\n    this.ListData0={\n        \"status\":\"0\",\n        \"accountID\":this.accountID\n        },\n      this.ListData1={\n        \"status\":\"1\",\n        \"accountID\":this.accountID\n      },\n      this.ListData2 ={\n        \"status\":\"2\",\n        \"accountID\":this.accountID\n      }\n    this.$store.dispatch(types.GET_KF_INFO,this.accountID)\n    .then(res=>{\n      _this.userInfo = res\n      sessionStorage.setItem('userInfo',res)\n    }).catch(err=>console.log(err))\n\n    if(!sessionStorage.getItem(\"accountID\")){\n        this.$router.push('/login')\n    }\n    //socket  token\n    let _this = this\n    //刷新msgtoken 并且开启长连接\n    _this.$store.dispatch(types.REFRESH_MSG_TOKEN,{accountID:sessionStorage.getItem('accountID')})\n   .then(res=>{\n        initWebSocket()\n        function initWebSocket(){\n        //初始化websocket\n        //建立连接\n        _this.websocket = new WebSocket('wss://im-msg-weixin.jiama.online/wss')\n        //建立成功\n        _this.websocket.onopen = function (){ //连接成功事件\n        console.log('websocket success')\n          _this.websocket.send (JSON.stringify ({\n                opt: \"connect\",\n                accountID: _this.accountID,\n                msgToken: res.msgToken,\n                timestamp: 1559568992,\n                lat: 31.01, //登陆时纬度\n                lon: 121.01 //登陆时经度\n          }))\n          //获取已接单列表\n          _this.getListOrder(_this.ListData1)\n\n          //获取地图上未被接单的列表\n          _this.getPushListOrder(_this.ListData0)\n          //获取结束单列表\n          _this.getEndOrderList(_this.ListData2)\n        }\n        //建立失败\n          _this.websocket.onerror = function(){ //连接失败事件\n          console.log(\"WebSocket连接发生错误\");\n          //  this.reconnect();\n          }\n          //接受信息\n          _this.websocket.onmessage = function (event){ //接收服务器推送的信息\n            //打印收到的服务器内容\n            let data = JSON.parse(event.data)\n            console.log(data)\n            //开启心跳\n            start()\n            if(data.msgType==\"kfNotice\"){\n                let List = []\n                List.push(data)\n                console.log(data)\n                _this.updataPushMapOverview(List)\n                _this.openSuccess(\"系统推送一条新单\")\n            }else if(data.msgType==\"groupText\" ||  data.msgType=='groupPic' ||  data.msgType=='groupVoice' || data.msgType=='groupMap'){\n                  if(data.groupID==_this.currentServiceInfo.channelID){\n                    _this.chatMessageList.push(data)\n                    if(data.msgType==\"groupMap\"){\n                    data.msgObj.map = JSON.parse(data.msgObj.map)\n                    setTimeout(() => {\n                      let map = new BMap.Map('groupMap'+data.msgTime);    //\n                      let point = new BMap.Point(data.msgObj.map.lng, data.msgObj.map.lat);\n                      map.centerAndZoom(point, 19);\n                      let marker = new BMap.Marker(point)\n                      map.addOverlay(marker)\n                    }, 1)\n                  }\n                  _this.handleScroll()\n                  }else{\n                    // _this.innerLeftList.map(val)\n                  }\n            }else if(data.msgType==\"kfWelcome\" || data.msgType==\"kfEnd\" ){\n                _this.chatMessageList.push(data)\n            }else if(data.msgType==\"kfApply\"){\n              for (let it of _this.innerLeftList){\n                if(it.orderID == data.orderID){\n                  it.leftListCover = true\n                }\n              }\n            }else if(data.msgType==\"kfOrderSuccess\"){\n              setTimeout(()=>{\n              let div = document.getElementsByClassName('Overlay'+data.msgObj.orderID)\n              div.remove(div)\n\n              },50)\n            }\n            setTimeout(()=>{\n              _this.handleScroll()\n            },50)\n            \n          }\n        //连接关闭\n          _this.websocket.onclose = function (e){\n          clearTimeout(_this.timeoutObj)\n          console.log(\"connection closed (\" + e.code + \")\");\n          //重连\n          reconnect()\n          }\n      }\n      function reconnect(){//重新连接\n          if(_this.lockReconnect){\n            return\n          }\n          _this.lockReconnect = true\n          //如果没有连上会一直重连，设置延迟避免请求过多\n          _this.timeoutnum && clearTimeout(_this.timeoutnum);\n          _this.timeoutnum = setTimeout(function(){\n           // 新连接\n            initWebSocket()\n            _this.lockReconnect = false\n          },false)\n        }\n      function start(){//开启心跳\n        console.log('start  go')\n        let time = 0\n          _this.timeoutObj = setInterval(function(){\n            //这里发送一个心跳，后端收到后，返回一个心跳消息\n            console.log('.11')\n            let timeStamps = Date.parse (new Date ()) / 1000;\n              _this.websocket.send(JSON.stringify ({\n                opt: 'heart',\n                accountID: _this.accountID,\n                msgToken: _this.msgToken,\n                timestamp: timeStamps,\n                isKF: 1,\n                gps: [{\n                  E: 121.30692,\n                  N: 31.16184,\n                  V: 0,\n                  D: - 1,\n                  A: 13,\n                  T: timeStamps\n                }]\n              }));\n          },30000)\n        }\n    }).catch(err=>{\n      console.log(err)\n    })\n    //获取服务单列表\n  },\n  name: 'index',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      errorImgSrc: 'this.src=\"'+ require('../assets/ServiceLogo.png') + '\"',\n      orderhelp:require('../assets/orderhelp.jpg'),\n      orderSOS:require('../assets/orderSOS.jpg'),\n      loadingImg:require('../assets/loading.gif'),\n      clock:require('../assets/clock.png'),\n      currentO_id:\"\",\n      WxAcodeVisible:false,\n      WxAcode:'',//二维码bath64\n      containerVisible:true,\n      containerVisible2:false,\n      //客服个人信息\n      userInfo:{},\n      //工单推送信息\n      userPointLocationOrderInfo:[],\n      //右侧已推送工单列表\n      innerLeftList:[],\n      //获取左侧列表\n      ListData0:{},\n      ListData1:{},\n      ListData2 :{},\n      accountID:sessionStorage.getItem('accountID'),\n      accessToken:sessionStorage.getItem('accessToken'),\n      //右边长连接消息详情\n      innerRightMessageInfo:[],\n      //右边成员列表\n      innerRightOrderMember:[],\n      //当前服务\n      currentServiceNum:0,\n      currentService:\"当前服务(0)\",\n      //已结束服务单列表\n      endOrderList:[],\n      dialogVisibleTransfer:false,\n      TranserList:[],//转移在线客服列表,\n      commonWordList:['问候语ni好吗','我不好你个垃圾','我可以帮您查路况，查地点，设置导航位置，没事唠嗑也行！也可以帮你查周围的停车、加油等服务点。'],//常用语消息列表\n      commonProblemList:['车子有问题拿去卖破烂','车子没问题拿去卖铁'],\n      beTransfer:\"\",\n      edit:0,//是否编辑\n      inputEndOrderAdress:\"上海市-普陀区-镇坪路389号\",\n      textareaEndOrderDesc:\"请描述用户所咨询的问题\",\n      startTime:'',//咨询开始时间\n      endTime:'', //咨询结束时间\n      duration:'',\n      textarea: '',\n      currentAdvisory:0,//当前咨询个数\n      status: \"1\",\n      socketMessageText:\"\",\n      index:Number,//右侧列表下标\n      endindex:Number,\n      Tindex:Number, //转移下标\n      leftListActive:\"\",\n      visible2: false,\n      visible3: false,\n      innerRightVisible:false,\n      readyWorkOut:false,\n      dialogVisibleEndOrder:false,\n      ak: 'G1ZqRQeFuAutcV5NYPiVvdaMNQ5tWpp9',\n      currentServiceInfo:{},//当前服务信息,\n      map:{},//地图\n      map2:{},//地图\n      BMap:{},\n      currentGps:{},\n      searchLocation:{},//搜索当前地址\n      Overlay:{},\n      Point:{},\n      // socket 部分\n      msgToken:'',\n      websocket:null,//建立的连接\n      //消息列表部分\n      chatMessageList:[],\n      loading: false,\n      zcount:0,//当前个数\n      count:0,//总个数\n      page:0,//当前页数,\n      noMore:false,\n      recordingVisible:true, //录音对话框\n      lockReconnect:false,\n      timeout:2*1000,//30秒一次的心跳\n      timeoutObj:null,//心跳倒计时\n      serverTimeoutObj:null,//心跳倒计时\n      timeoutnum:null,//断开 重连倒计时\n      lastRunTime:Date.now(),//上次播放的时间\n      mapPoint:[],//实时地图位置\n      callShow: false,\n      callUserList: [\n          {\n              headPic: require('../assets/orderSOS.jpg'),\n              nickName: '放的地方',\n              userId: '556556'\n\n          },\n          {\n              headPic: require('../assets/orderSOS.jpg'),\n              nickName: '放的地方',\n              userId: '12566452'\n\n          }\n      ],\n      clickItemUserList: [],\n      infoShow: false,\n      roomName: '',\n      againVit: false,\n      myRoom: '',\n      roomAdminShow: false,\n      onlineCallShow: false,\n      myInfo: {},\n      callList: [\n          {\n              headPic: require('../assets/orderSOS.jpg'),\n              nickName: '放的地方',\n              userId: 'dfgdfg'\n          },\n          {\n              headPic: require('../assets/orderSOS.jpg'),\n              nickName: '放的地方',\n              userId: '12566452'\n\n          }\n      ],\n      clickItemUser: {\n          headPic: require('../assets/orderSOS.jpg'),\n          nickName: '放的地方',\n          userId: '12566452'\n      }\n    }\n  },\n\n  mounted(){\n    //渲染地图\n     var _this = this; \n     //推送单的列表的地图1\n      _this.map = new BMap.Map('container')\n      let map = _this.map\n      _this.map.centerAndZoom(new BMap.Point(116.328, 40.020), 15);\n      _this.map.enableScrollWheelZoom(true);\n      // 添加比例尺\n      // _this.map.addControl(new _this.BMap.ScaleControl());\n      _this.map.addControl(new BMap.ScaleControl()); \n      // 添加缩略地图\n      _this.map.addControl(new BMap.OverviewMapControl());\n    // })\n    //推送myGPS地图2\n     _this.map2 = new BMap.Map('container2')\n      let map2 = _this.map2\n      _this.map2.centerAndZoom(new BMap.Point(116.328, 40.020), 15);\n      _this.map2.enableScrollWheelZoom(true);\n      // 添加比例尺\n      // _this.map.addControl(new _this.BMap.ScaleControl());\n      _this.map2.addControl(new BMap.ScaleControl()); \n      // 添加缩略地图\n      _this.map2.addControl(new BMap.OverviewMapControl());\n    document.getElementById('socketMessageList').addEventListener('scroll', this.loadingScroll)\n    //自动完成搜索地址并找到并发送\n    function G(id) {\n      return document.getElementById(id);\n    }      // 初始化地图,设置城市和地图级别。\n\n    var ac = new BMap.Autocomplete(    //建立一个自动完成的对象\n      {\"input\" : \"suggestId\"\n      ,\"location\" : map2\n    });\n\n      ac.addEventListener(\"onhighlight\", function(e) {  //鼠标放在下拉列表上的事件\n      var str = \"\";\n        var _value = e.fromitem.value;\n        var value = \"\";\n        if (e.fromitem.index > -1) {\n          value = _value.province +  _value.city +  _value.district +  _value.street +  _value.business;\n        }    \n        str = \"FromItem<br />index = \" + e.fromitem.index + \"<br />value = \" + value;\n        \n        value = \"\";\n        if (e.toitem.index > -1) {\n          _value = e.toitem.value;\n          value = _value.province +  _value.city +  _value.district +  _value.street +  _value.business;\n        }    \n        str += \"<br />ToItem<br />index = \" + e.toitem.index + \"<br />value = \" + value;\n        G(\"searchResultPanel\").innerHTML = str;\n      });\n\n      var myValue;\n      ac.addEventListener(\"onconfirm\", function(e) {    //鼠标点击下拉列表后的事件\n      var _value = e.item.value;\n        myValue = _value.province +  _value.city +  _value.district +  _value.street +  _value.business;\n        G(\"searchResultPanel\").innerHTML =\"onconfirm<br />index = \" + e.item.index + \"<br />myValue = \" + myValue;\n        \n        setPlace();\n      });\n\n      function setPlace(){\n\n        function myFun(){\n          var pp = local.getResults().getPoi(0).point;    //获取第一个智能搜索的结果\n          _this.searchLocation = pp\n          map2.centerAndZoom(pp, 18);\n          map2.addOverlay(new BMap.Marker(pp));    //添加标注\n          let BMap_Marker = document.querySelectorAll('span.BMap_Marker')\n            setTimeout(()=>{\n                for ( let it of BMap_Marker){\n                    it.remove(it)\n                  }\n          },5000)\n        }\n        var local = new BMap.LocalSearch(map2, { //智能搜索\n          onSearchComplete: myFun\n        });\n        local.search(myValue);\n      }\n      \n  },\n  methods:{\n    getWxAcode(){\n      //获取二维码\n      let _=this\n      this.WxAcodeVisible = true\n      let  timeStamp = Date.parse (new Date ()) / 1000;\n      let util =   utils.gainPhone({\n          appKey: '7863228592',\n          timestamp: timeStamp\n      })\n      axios({\n        url:'/oauth/getWxAcodeUnlimit',\n        method:'POST',\n        data:{\n           \"scene\":\"123456\",\n            \"page\":\"webpages/pages/webpage\"\n        },\n        headers:{\n          appKey: '7863228592',\n          timestamp: timeStamp,\n          sign: util\n        }\n      }).then(res=>{\n        console.log(res)\n        _.WxAcode =\"data:image/jpeg;base64,\" + res.data.RESULT\n      }).catch(err=>{\n        console.log(err)\n      })\n    },\n    SwitchPage(){ //抢单页面切换\n      this.containerVisible2 = false\n      this.containerVisible = true\n    },\n    SelectTransfer(item,index){ //选择当前客服\n      this.Tindex = index\n      this.beTransfer = item\n\n    },\n    userTransfer(){ //转移客服\n      let _ = this\n      let data = {\n        kfInfo :this.beTransfer,\n        userInfo:this.userInfo\n      }\n      console.log(data)\n      Api.changeKf(\n        data\n      ).then(res=>{\n        if(res=='success'){\n          _.getListOrder(_.ListData1)\n          _.innerRightVisible = false\n          _.openSuccess('移交成功')\n        }else{\n          _.onerror(\"移交失败\")\n        }\n        _.dialogVisibleTransfer = false\n      }).catch(err=>{\n        console.log(err)\n        _.onerror(\"移交失败\")\n      })\n\n    },\n    transfer(){\n      this.readyWorkOut = false\n      this.dialogVisibleTransfer = true\n      let _this = this\n      Api.getKfList(\n        {\n          \"spID\": this.userInfo.spID\n        }\n      ).then(res=>{\n        console.log(res)\n        _this.TranserList = res\n      }).catch(err=>{\n        console.log(err)\n      })\n    },\n    holdout(){\n      this.$router.push('/login')\n    }, \n    workquit(){\n      this.readyWorkOut=true\n      this.currentAdvisory = this.innerLeftList.length\n    },\n    //第一次加载页面刷新覆盖物\n    updataMapOverview(list){\n      var _this = this;\n          //循环遍历增加页面推送工单\n          function picOverlay(point,data){\n          //创建页面自定义覆盖物原型方法\n            this._point = point;\n            this.data = data\n          }\n          picOverlay.prototype = new BMap.Overlay()\n          picOverlay.prototype.initialize = function(map){\n            this._map = map\n            let div = this._div = document.createElement('div');\n            div.style.position = 'absolute'\n            div.style.overflow = 'hidden'\n            div.style.fontSize = '12px'\n            div.style.textAlign = 'center'\n            div.style.cursor = 'pointer'\n            div.className = 'Overlay'+this.data.orderID\n            div.style.zIndex = BMap.Overlay.getZIndex(this._point.lat);\n            let p = this._p = document.createElement('p')\n            let img = this._img = document.createElement('img')\n            let tipImg = this._tipImg = document.createElement('img')\n            p.appendChild(document.createTextNode(this.data.nickName))\n            img.setAttribute('src',this.data.headPic)\n            tipImg.setAttribute('src',_this.orderhelp)\n            //设置图片样式\n            img.style.width ='30px'\n            img.style.height ='30px'\n            img.style.border = '2px solid #005ced'\n            img.style.boxShadow = '0px 0px 8px #005ced'\n            img.style.borderRadius = '50px'\n            //设置tip图片样式\n            tipImg.style.width ='118px'\n            tipImg.style.height ='65px'\n            let Cdiv = document.createElement('div')\n            Cdiv.className = 'ClockTime'\n            Cdiv.style.backgroundColor= 'white';\n            Cdiv.style.display='inline-block';\n            Cdiv.style.padding= '4px';\n            Cdiv.style.borderRadius= '10px';\n            let Cimg = document.createElement('img')\n            Cimg.style.height = '20px'\n            Cimg.style.verticalAlign = 'middle'\n            Cimg.setAttribute('src',_this.clock)\n            let Cspan = document.createElement('span')\n            let _ = this\n            let Ctime = document.createTextNode(this.num)\n            let currentTime = Date.parse(new Date()) / 1000\n            let diff = currentTime-_.data.cTime<=0 ? 0 : currentTime-_.data.cTime\n            let h = Math.floor(diff/3600) \n            diff = diff % 3600\n            let m = Math.floor(diff/60)\n            diff = diff % 60\n            let s = diff \n\n            setInterval(()=>{ //增加正计时\n                s++\n                if(s>=60){\n                   s = 1\n                   m++\n                }\n                if(m>=60){\n                   h++\n                   m=0\n                }\n                Cspan.innerText =  h + '小时'+ m +'分钟' + s +'秒'\n            },1000)\n            let OverDiv = document.createElement('div')\n            Cspan.appendChild(Ctime)\n            Cdiv.appendChild(Cimg)\n            Cdiv.appendChild(Cspan)\n            OverDiv.appendChild(Cdiv) \n            div.appendChild(tipImg)\n            div.appendChild(OverDiv) //增加倒计时\n            div.appendChild(img)\n            div.appendChild(p)\n            //增加点击事件创建服务单\n            let data = this.data\n            //抢单事件\n            div.onclick = function(e){\n                //客服抢单时获取用户信息\n                console.log(_this.accountID)\n                  let userInfo = _this.userInfo\n                  console.log(userInfo)\n                  userInfo.lng = '116.358'\n                  userInfo.lat = '40.050'\n                  console.log(userInfo)\n                let QD_Data = {\n                  \"userInfo\":userInfo,\n                  \"orderID\" : data.orderID,\n                  \"channelID\":data.channelID\n                }\n                console.log(QD_Data)\n                _this.$store.dispatch(types.UPDATE_ORDER,QD_Data).then(res=>{\n                _this.openSuccess('抢单成功')\n                _this.getListOrder(_this.ListData1)\n                div.remove(div)\n              }).catch(err=>{\n                console.log(err)\n                _this.openError('抢单失败')\n              })\n              //获取正在服务服务单列表\n            }\n            _this.map.getPanes().labelPane.appendChild(div);\n              return div\n            }\n            picOverlay.prototype.draw = function(){\n              let map = this._map;\n              let pixel = map.pointToOverlayPixel(this._point)\n              this._div.style.left = pixel.x + \"px\";\n              this._div.style.top  = pixel.y - 30 + \"px\";\n            }\n          //遍历用户\n          if(list&&list[0]&&list.length>=1){\n              for (let it of list) {\n                let location =  {lng:it.lng,lat:it.lat}\n                let myOverlay = new picOverlay(location,it)\n                _this.map.addOverlay(myOverlay)\n            }\n          }\n    },\n    // 增加 / 更新 / 刷新页面 覆盖物\n    updataPushMapOverview(list){\n          var _this = this;\n          //循环遍历增加页面推送工单\n          //创建页面自定义覆盖物原型方法\n          function picOverlay(point,data){\n            this._point = point;\n            this.data = data\n          }\n          picOverlay.prototype = new BMap.Overlay()\n          picOverlay.prototype.initialize = function(map){\n            this._map = map\n            let div = this._div = document.createElement('div');\n            div.style.position = 'absolute'\n            div.style.overflow = 'hidden'\n            div.style.fontSize = '12px'\n            div.style.textAlign = 'center'\n            div.style.cursor = 'pointer'\n            div.className = 'Overlay'+this.data.orderID\n            div.style.zIndex = BMap.Overlay.getZIndex(this._point.lat);\n            let p = this._p = document.createElement('p')\n            let img = this._img = document.createElement('img')\n            let tipImg = this._tipImg = document.createElement('img')\n            p.appendChild(document.createTextNode(this.data.msgObj.nickName))\n            img.setAttribute('src',this.data.msgObj.headPic)\n            tipImg.setAttribute('src',_this.orderhelp)\n            console.log(this.data)\n            //设置图片样式\n            img.style.width ='30px'\n            img.style.height ='30px'\n            img.style.border = '2px solid #005ced'\n            img.style.boxShadow = '0px 0px 8px #005ced'\n            img.style.borderRadius = '50px'\n            //设置tip图片样式\n            tipImg.style.width ='118px'\n            tipImg.style.height ='65px'\n            //增加正计时开始\n            let Cdiv = document.createElement('div')\n            Cdiv.className = 'ClockTime'\n            Cdiv.style.backgroundColor= 'white';\n            Cdiv.style.display='inline-block';\n            Cdiv.style.padding= '4px';\n            Cdiv.style.borderRadius= '10px';\n            let Cimg = document.createElement('img')\n            Cimg.style.height = '20px'\n            Cimg.style.verticalAlign = 'middle'\n            Cimg.setAttribute('src',_this.clock)\n            let Cspan = document.createElement('span')\n            let _ = this\n            let Ctime = document.createTextNode(this.num)\n            let currentTime = Date.parse(new Date()) / 1000\n            let diff = currentTime-_.data.msgObj.cTime<=0 ? 0 : currentTime-_.data.msgObj.cTime\n            console.log('======')\n            console.log(currentTime-_.data.cTime)\n            console.log(diff)\n            let h = Math.floor(diff/3600) \n            diff = diff % 3600\n            let m = Math.floor(diff/60)\n            diff = diff % 60\n            let s = diff \n            setInterval(()=>{ //增加正计时\n                 h = m+1>=60 ? h+1 : h +1 >=60 ? 0 : h  \n                 m = s+1>=60 ? m+1 : m +1 >=60 ? 0 : m \n                 s = s+1>=60 ? 0 : s+1 \n              Cspan.innerText =  h + '小时'+ m +'分钟' + s +'秒'\n            },1000)\n            let OverDiv = document.createElement('div')\n            Cspan.appendChild(Ctime)\n            Cdiv.appendChild(Cimg)\n            Cdiv.appendChild(Cspan)\n            OverDiv.appendChild(Cdiv) \n            div.appendChild(tipImg)\n            div.appendChild(OverDiv) //增加倒计时结束\n            div.appendChild(img)\n            div.appendChild(p)\n            //增加点击事件创建服务单\n            let data = this.data\n            //抢单事件\n            //抢单事件\n            div.onclick = function(e){\n                let userInfo = _this.userInfo\n                  console.log(userInfo)\n                  userInfo.lng = '116.358'\n                  userInfo.lat = '40.050'\n                  console.log(userInfo)\n                let QD_Data = {\n                  \"userInfo\":userInfo,\n                  \"orderID\" : data.orderID,\n                  \"accountID\" : _this.accountID\n                }\n                _this.$store.dispatch(types.UPDATE_ORDER,QD_Data).then(res=>{\n                 _this.openSuccess('抢单成功')\n                _this.getListOrder(_this.ListData1)\n                  div.remove(div)\n              }).catch(err=>{\n                console.log(err)\n                _this.openError('抢单失败')\n              })\n              //获取正在服务服务单列表\n            }\n            _this.map.getPanes().labelPane.appendChild(div);\n              return div\n            }\n            picOverlay.prototype.draw = function(){\n              let map = this._map;\n              let pixel = map.pointToOverlayPixel(this._point)\n              this._div.style.left = pixel.x + \"px\";\n              this._div.style.top  = pixel.y - 30 + \"px\";\n            }\n          //遍历用户\n          console.log(list)\n          if(list&&list[0].msgObj&&list.length>=1){\n              for (let it of list) {\n                let location = {lng:it.msgObj.lng,lat:it.msgObj.lat}\n                let myOverlay = new picOverlay(location,it)\n                _this.map.addOverlay(myOverlay)\n            }\n\n          }\n    },\n    createPushMapUser(gps){\n          let _this = this\n          function picOverlay(point,data){\n          //创建页面自定义覆盖物原型方法\n            this._point = point;\n            this.data = data\n          }\n          picOverlay.prototype = new BMap.Overlay()\n          picOverlay.prototype.initialize = function(map){\n            let _ = this\n            this._map = map\n            let div = this._div = document.createElement('div');\n            div.style.position = 'absolute'\n            div.style.overflow = 'hidden'\n            div.style.fontSize = '12px'\n            div.style.width = '50px'\n            div.style.textAlign = 'center'\n            div.style.cursor = 'pointer'\n            div.className = 'OverlayUserMove'\n            div.style.zIndex = BMap.Overlay.getZIndex(this._point.lat);\n            let p = this._p = document.createElement('p')\n            let img = this._img = document.createElement('img')\n            p.appendChild(document.createTextNode(this.data.nickName))\n            img.setAttribute('src',this.data.headPic)\n            //设置图片样式\n            img.style.width ='30px'\n            img.style.height ='30px'\n            img.style.border = '2px solid #005ced'\n            img.style.boxShadow = '0px 0px 8px #005ced'\n            img.style.borderRadius = '50px'\n            div.appendChild(img)\n            div.appendChild(p)\n            _this.map2.getPanes().labelPane.appendChild(div);\n              return div\n            }\n            picOverlay.prototype.draw = function(){\n              let map = this._map;\n              let _ = this\n              let pixel\n              setInterval(()=>{\n                pixel = map.pointToOverlayPixel(_._point)\n              _._div.style.left = pixel.x + \"px\";\n              _._div.style.top  = pixel.y - 30 + \"px\";\n              },10)\n            }\n            let location =  {lng:gps.gps.lng,lat:gps.gps.lat}\n            let myOverlay = new picOverlay(location,gps)\n            _this.map2.addOverlay(myOverlay)\n    },\n    removeOverlay(){ //删除覆盖物\n\n          let OverlayUserMove = document.querySelectorAll('div.OverlayUserMove')\n            for ( let it of OverlayUserMove){\n                it.remove(it)\n          }\n    },\n    getPushListOrder(data){ //推送服务单列表\n      let _this = this\n      this.$store.dispatch(types.LIST_PUSH_ORDER,data)\n      .then(res=>{\n          if(res.status==\"error\"){\n            _this.endOrderList = []\n          }else{\n            _this.userPointLocationOrderInfo = res\n            _this.updataMapOverview(_this.userPointLocationOrderInfo)\n            console.log(_this.userPointLocationOrderInfo)\n          }\n      }).catch(err=>{\n        console.log(err)\n      })\n    },\n    getEndOrderList(data){ //已结束服务单列表\n      console.log(123)\n      let _this = this\n      this.$store.dispatch(types.LIST_ORDER,data)\n      .then(res=>{\n          if(res.status==\"error\"){\n            _this.endOrderList = []\n          }else{\n            _this.endOrderList = res\n          }\n      }).catch(err=>{\n        console.log(err)\n      })\n    },\n    //消息列表滚动条事件\n    handleScroll(){\n      let scroll = document.getElementById('socketMessageList')\n      let height = document.getElementById('socketMessageListUl').offsetHeight\n      scroll.scrollTop = scroll.scrollHeight\n    },\n    //获取服务单列表\n    getListOrder(data){\n\n      let _this = this\n      this.$store.dispatch(types.LIST_ORDER,data)\n      .then(res=>{\n            //获取还未被抢单的列表\n            if(data.status==\"0\"){\n              console.log(res)\n              _this.userPointLocationOrderInfo = res\n            //获取已经被抢单的列表\n            }else if(data.status==\"1\"){\n              console.log(res)\n              if(res.status==\"error\"){\n                _this.innerLeftList = []\n              }else{\n                //增加 遮罩层 增加未读提示消息\n                _this.innerLeftList= []\n                for (let it of res ){\n                  it.leftListCover = false\n                  it.tip = 0\n                  _this.innerLeftList.push(it)\n                }\n                _this.currentServiceNum = _this.innerLeftList.length\n              }\n            }\n      }).catch(err=>{\n        console.log(err)\n      })\n    },\n    //客服加入频道\n    joinChannel(info){\n      this.$store.dispatch(types.JOIN_CHANNEL,info).then(res=>{\n        console.log('joinChannel')\n        console.log(res)\n      }).catch(err=>{\n        console.log(err)\n      })\n    },\n    //获取右侧消息详情\n    getMessageInfo(item,index,option){\n      // console.log\n      let _that = this\n      this.removeOverlay()\n      _that.containerVisible = false\n      this.containerVisible2 = true\n      this.currentServiceInfo = item\n      _that.chatMessageList = []\n      this.currentServiceInfo.option = option\n      //创建并且初始化聊天窗口\n      if(option=='start'){\n          this.index = index\n      }else if(option=='end'){\n        this.endindex = index\n      }\n      _that.innerRightOrderMember = []\n      this.innerRightVisible = true\n      let data = {\n        \"orderID\":item.orderID,\n        \"accountID\": item.accountID,// 登录用户id\n        \"isInit\":false\n      } \n      _that.$store.dispatch(types.INIT_ORDER,data)\n      .then(res=>{\n        _that.innerRightOrderMember = res\n        console.log(res)\n        _that.getUserLocation(res) //第一次执行\n        setTimeout(()=>{\n          _that.map2.centerAndZoom(new BMap.Point(_that.currentGps.lng, _that.currentGps.lat),15);\n        },1000)\n        setInterval(()=>{\n          _that.removeOverlay()\n          _that.getUserLocation(res) //20秒一次绘图人物定位\n        },30000)\n      }).catch(err=>{\n        console.log(err)\n      })\n      _that.page = 1\n      // _that.chatMessageList = [] //消息列表\n      _that.getChatLog(item.channelID)\n        setTimeout(()=>{\n         _that.handleScroll() //滚动条\n        },500)\n      console.log(item)\n      //创建频道在线内用户列表\n      //地图上创建标注 创建轨迹 \n    },\n    //调用myGPS接口\n    getUserLocation(list){\n      let _ = this\n      let memberList = list\n      console.log(list)\n        for(let it of memberList){\n          if(it.accountID==_.accountID){\n            continue\n          }\n            Api.getUserLocation({accountID:it.accountID}).then(res=>{\n              if(res.status!=='error'){\n                  it.gps = res\n                  _.createPushMapUser(it)\n              }\n              if(it.userType=='1'){\n                _.currentGps = res \n              }\n            }).catch(err=>{\n              console.log(err)\n            })\n        }\n\n    },\n    getChatLog(channelID){ //获取聊天记录\n\n      this.loading = true\n      let _this = this\n      let data = {\n        channelID:channelID,\n        page:_this.page,\n        \"step\": \"20\",\n        \"isUp\":'up'\n      }\n      console.log(_this.page)\n      \n      Api.getChatList(data)\n      .then(res=>{\n        console.log(res)\n        _this.count = res.count\n        _this.zcount = res.zcount\n        _this.page =  _this.page+1 \n        if(res.list<1){\n          _this.loading = false\n          _this.noMore = true\n          return\n        }\n          // let list = JSON.parse(res.list)\n          for (let it of res.list) {\n            //push 指定的文本\n              _this.chatMessageList.unshift(it)\n              \n              if(it.msgType==\"groupMap\"){\n                it.msgObj.map = JSON.parse(it.msgObj.map)\n                console.log(it)\n                setTimeout(() => {\n                  let map = new BMap.Map('groupMap'+it.msgTime);    //\n\n                  let point = new BMap.Point(it.msgObj.map.lng, it.msgObj.map.lat);\n                  console.log(point)\n                  map.centerAndZoom(point, 19);\n                  let marker = new BMap.Marker(point)\n                  map.addOverlay(marker)\n                }, 1)\n              }\n              _this.loading = false\n          }\n          \n          _this.chatMessageList = [...new Set(_this.chatMessageList)]\n            _this.loading = false\n        }).catch(err=>{\n          console.log(err)\n        })\n    },\n    loadingScroll(){\n      let _this = this\n      let scroll = document.getElementById('socketMessageList')\n      let height = document.getElementById('socketMessageListUl').offsetHeight\n      if(scroll.scrollTop == 0){\n        console.log('show')\n        _this.getChatLog(_this.currentServiceInfo.channelID)\n        \n      }\n    },\n    //历史消息图文 录音 处理\n    sendImg() {\n      let uploadInput = document.getElementById('uploadInput').files[0]\n      let fr = new FileReader()\n      let base64 \n      let _this = this\n      if(uploadInput.size.toFixed(1)>2*1024*1024){\n        _this.openError(\"文件不能大于2M\")\n        return\n      }\n      fr.readAsDataURL(uploadInput);\n      fr.onload = function(){\n        base64 = fr.result\n        // utils.compressPictures(base64)\n        Api.uploadOssImg({base64:base64}).then(res=>{\n            _this.sendMessageInfo(res,'groupPic')\n            console.log(res)\n          }).catch(err=>{\n            _this.openError('上传失败')\n          })\n      }\n    },\n    \n    Recording(operating){ //开始录音\n      let _this = this\n      let rec =  Recorder ()\n      console.log(rec)\n      rec.open(function(){//打开麦克风授权获得相关资源\n      rec.start ();\n       _this.$confirm('正在录音，点击录音完成发送给用户', '温馨提示', {\n          confirmButtonText: '录音完成',\n          cancelButtonText: '取消录音',\n          type: 'success'\n        }).then(() => {\n          _this.$message({\n            type: 'success',\n            message: '录音发送成功!'\n          });\n          rec.stop(function(blob,duration){//到达指定条件停止录音，拿到blob对象\n            rec.close ();//释放录音资源\n              const voice = new FileReader()\n              voice.readAsDataURL(blob)\n              voice.onload = function(e){\n                //保存数据 上传并发送\n              let  base64 = e.target.result\n                Api.uploadOssFile({base64:base64}).then(res=>{\n                  console.log(res)\n                  _this.sendMessageInfo(res,'groupVoice')\n                  console.log(res)\n                }).catch(err=>{\n                  _this.openError('上传失败')\n                })\n            }\n          })\n        }).catch(() => {\n          _this.$message({\n            type: 'info',\n            message: '录音发送失败'\n          });  \n          rec.stop(function(blob,duration){\n            rec.close();//释放录音资源\n          })        \n        });\n    })\n    },\n    //保存聊天记录\n    saveChatLog (user_info,msg,type) {\n      const msgInfo = {\n        from_id: user_info.id,\n        from_name: user_info.name,\n        from_avatar: user_info.avatar,\n        to_name: uinfo.username,\n        to_id: accountID,\n        msgType: type,\n        content: msg,\n        group_id: user_info.groupID\n      };\n      // this.$store.dispatch(types.ADD_CHAT_LOG,)\n    },\n    sendLocation(){\n      this.sendMessageInfo(JSON.stringify(this.searchLocation) ,'groupMap')\n      this.handleScroll()\n    },\n    sendMessageInfo(msg,group){ //向服务器发送消息\n          //数据发送\n          if(this.currentServiceInfo.option == 'end'){\n            this.$message.error('当前服务单已经结束');\n            return\n          }\n          if(group == 'groupText'){\n            if(msg.trim()==''){\n              this.$message.error('消息不能为空');\n              return\n            }\n          }\n          let _this = this\n          let info = {\n            \"userInfo\":{\n              \"accountID\": _this.userInfo.accountID, \n              \"nickName\": _this.userInfo.nickName, \n              \"headPic\": _this.userInfo.headPic,\n              \"lng\": \"116.358\",\n              \"lat\": \"40.050\",\n              \"userType\": 2\n            },\n            \"content\":msg,\n            \"msgType\": group, \n            \"channelID\": _this.currentServiceInfo.channelID, \n            \"orderID\": _this.currentServiceInfo.orderID\n          }\n          setTimeout(()=>{\n            _this.$store.dispatch(types.ADD_CHAT_LOG,info).then(res=>{\n              _this.socketMessageText = \"\"\n            }).catch(err=>{\n              console.log(err)\n              _this.openError('发送失败')\n            })\n\n          },30)\n          setTimeout(()=>{\n            _this.handleScroll()\n          },0)\n    },\n    EndOrderStart(){  //结束工单开始\n        this.dialogVisibleEndOrder=true\n        // this.inputEndOrderAdress:\"上海市-普陀区-镇坪路389号\",\n        // this.textareaEndOrderDesc:\"请描述用户所咨询的问题\",\n        console.log(this.currentServiceInfo)\n        this.startTime =utils.formatData(new Date((this.currentServiceInfo.start_time*1000)))\n        this.endTime=utils.formatData(new Date()) //咨询结束时间\n        this.calcDuration(this.currentServiceInfo.start_time)\n    },\n    calcDuration(t){ //计算时间\n          let timeStamps = Date.parse(new Date())/1000\n          let diff = timeStamps-t\n          let h = Math.floor(diff/3600) + '小时'\n          diff = diff % 3600\n          let m = Math.floor(diff/60)+'分钟'\n          diff = diff % 60\n          let s = diff +'秒'\n          this.duration = h+m+s\n    },\n    EndOrder(){ //结束工单\n        \n         let info = this.userInfo\n         let _this = this\n         let data = {\n           \"userInfo\":info,\n            \"channelID\": this.currentServiceInfo.channelID,\n            \"desc\": this.textareaEndOrderDesc,\n            \"address\": this.inputEndOrderAdress,\n            \"endTime\": this.endTime\n         }\n         console.log(data)\n         console.log(_this.innerLeftList)\n        this.$store.dispatch(types.OUT_KF_CHANNEL,data).then(res=>{\n          this.openSuccess('结单成功')\n          _this.innerLeftList =  _this.innerLeftList.filter((val)=>{\n             return val.channelID != data.channelID\n          })\n          _this.endOrderList.push(this.currentServiceInfo)\n          _this.currentServiceNum = _this.innerLeftList.length\n        }).catch(err=>{\n          console.log(err)\n          this.openError('结单失败')\n        })\n        _this.currentServiceNum = _this.innerLeftList.length\n        this.dialogVisibleEndOrder=false\n        this.innerRightVisible = false\n        this.removeOverlay()\n    },\n    //错误提示\n    openError(err) {\n        this.$message.error(err);\n    },\n    //成功提示\n    openSuccess(success) {\n        this.$message({\n          message:success,\n          type:'success'\n        })\n    },\n  //聊天样式绑定 自己的和他人的\n    messageStyle(accountID){\n      return accountID== this.accountID ? 'message-item-self' : 'message-item'\n    },\n      toCall() {\n        this.callShow = true\n        for (let item of this.callUserList) {\n          this.$set(item, 'check', false)\n        }\n        // this.callUserList = this.innerRightOrderMember\n      },\n      // 踢人\n      kickoutUser () {\n          this.$confirm('确认将' + this.clickItemUser.nick_name + '踢出回话房间？', '提示', {\n              confirmButtonText: '确定',\n              cancelButtonText: '取消',\n              type: 'warning',\n              center: true\n          }).then(() => {\n              this.roomAdminShow = false\n              this.myRoom.kickoutUser(this.clickItemUser.accountID)\n          }).catch(() => {\n          })\n      },\n      // 开始呼叫\n      startCall () {\n          if (this.clickItemUserList.length === 0) {\n              this.$message({\n                  showClose: true,\n                  message: '请选择呼叫人员',\n                  type: 'error'\n              })\n          } else if (this.clickItemUserList.length > 8) {\n              this.$message({\n                  showClose: true,\n                  message: '最多只能呼叫8个人',\n                  type: 'error'\n              })\n          } else {\n              this.infoShow = true\n          }\n      },\n      // 取消全部\n      allNoCheck () {\n          for (let item of this.callUserList) {\n              this.$set(item, 'check', false)\n          }\n          this.clickItemUserList = []\n      },\n      // 选中\n      ischeck (item) {\n          this.$set(item, 'check', !item.check)\n          if (item.check) {\n              this.clickItemUserList.push(item)\n          } else {\n              for (let i = this.clickItemUserList.length - 1; i >= 0; i--) {\n                  if (this.clickItemUserList[i].userId === item.userId) {\n                      this.clickItemUserList.splice(i, 1)\n                  }\n              }\n          }\n      },\n      // 静音\n      toMetud (boon) {\n          this.metud = boon\n          // 批量订阅tracks，并在页面上播放\n          // 订阅房间中已经存在的 tracks\n          if (this.metud) {\n              const localTracks = QNRTC.deviceManager.getLocalTracks({\n                  audio: {enabled: true, tag: 'audio', muted: true}\n              })\n              this.myRoom.publish(localTracks)\n          } else {\n              const localTracks = QNRTC.deviceManager.getLocalTracks({\n                  audio: {enabled: true, tag: 'audio', muted: false}\n              })\n              this.myRoom.publish(localTracks)\n          }\n      },\n      toShowUserList (i) {\n          console.log(i)\n          $('.userListDialog').animate({\n              right: '0'\n          }, 100)\n          if (i === 0) {\n              // 获取当前在线列表\n              this.$store.commit('updateActiveIndexTab', 0)\n              if (this.myInfo.role === 1) {\n                  this.$store.dispatch('POP_POST_GETCUSTOMERUSERLIST', {accountID: this.myInfo.accountID, status: '1'}).then((res) => {\n                      console.log(res, '客户')\n                      this.$store.commit('updateUserActiveList', res)\n                  })\n              } else {\n                  this.$store.dispatch('POP_POST_GETNEARUSERLIST', {cityCode: this.myInfo.cityCode}).then((res) => {\n                      console.log(res, '在线')\n                      this.$store.commit('updateUserActiveList', res)\n                  })\n              }\n          } else if (i === 1) {\n              // // 活跃\n              // this.$store.dispatch('POP_POST_GETACTIVEUSERLIST', {accountID: this.myInfo.accountID}).then((res) => {\n              //   console.log(res, '活跃')\n              //   this.$store.commit('updateActiveIndexTab', 1)\n              //   this.$store.commit('updateUserActiveList', res)\n              // })\n          } else {\n              // 客户\n              this.$store.commit('updateActiveIndexTab', 2)\n              this.$store.dispatch('POP_POST_GETCUSTOMERUSERLIST', {accountID: this.myInfo.accountID}).then((res) => {\n                  console.log(res, '客户')\n                  this.$store.commit('updateUserActiveList', res)\n              })\n          }\n      },\n      // 选择呼叫人员\n      toAdminRoom (item) {\n          console.log(item)\n          // this.$store.commit('updateClickItem', item)\n          this.clickItemUser = {\n              accountID: item.accountID,\n              user_header: item.user_header,\n              nick_name: item.nick_name\n          }\n          this.roomAdminShow = true\n      },\n      // 挂断并退出房间\n      leaveRoom () {\n          document.getElementById('callout').pause()\n          document.getElementById('off').play()\n          this.roomName = ''\n          this.callList = []\n          this.clickItemUserList = []\n          this.againVit = false\n          this.onlineCallShow = false\n          this.myRoom.leaveRoom()\n          this.callUserList = []\n          clearTimeout(this.timeout)\n      },\n      call () {\n          this.$store.commit('updateAgainVit', false)\n          this.againVit = true\n          let obj = {\n              accountID: this.clickItem.accountID,\n              user_header: this.clickItem.headPic,\n              nick_name: this.clickItem.nickName,\n              lat: this.clickItem.lat,\n              lng: this.clickItem.lng,\n              online: false\n          }\n          this.clickItemUserList.push(obj)\n          this.infoShow = true\n      },\n      // 关闭选择呼叫人员弹出\n      hiddenDialog () {\n          this.clickItemUserList = []\n          this.callShow = false\n          this.callUserList = []\n      },\n      // 添加呼叫人员\n      addCallUser () {\n        this.againVit = true\n        this.callShow = true\n        this.callUserList= this.mapUserList\n      },\n      // 创建房间进行通话\n      createRoom () {\n          this.myRoom = new QNRTC.TrackModeSession()\n          if (!QNRTC.version) {\n              this.$alert('您的浏览器不支持语音通话，请切换谷歌浏览器使用', '温馨提示', {\n                  confirmButtonText: '确定'\n              })\n              this.roomName = ''\n              this.myRoom = ''\n              return false\n          }\n          console.log('current version is', QNRTC.version)\n          // 加入房间\n          this.onlineCallShow = true\n          this.callShow = false\n          this.infoShow = false\n          document.getElementById('callout').play()\n          // 通话中再邀请\n          if (this.roomName) {\n              // this.$set(this.myInfo, 'online', true)\n              // this.callList.push(this.myInfo)\n              console.log(this.myInfo, 9999999)\n              let ary = []\n              for (let item of this.clickItemUserList) {\n                  let a = 0\n                  for (let i of this.callList) {\n                      if (i.accountID === item.accountID) {\n                          a = 1\n                      }\n                  }\n                  if (a === 0) {\n                      ary.push(item.accountID)\n                      // 获取房间暂未加入人员基本信息\n                      console.log(item, 102155555555555555555555555555555)\n                      this.$set(item, 'online', false)\n                      this.$set(item, 'user_name', item.nick_name)\n                      this.callList.push(item)\n                      this.timeout = setTimeout(() => {\n                          console.log(item)\n                          if (!item.online) {\n                              this.$message({\n                                  message: item.user_name + '未接听通话',\n                                  type: 'warning'\n                              })\n                              this.callList.forEach((item1, index) => {\n                                  console.log(item1, index)\n                                  if (item1.accountID === item.accountID) {\n                                      this.callList.splice(index, 1)\n                                      if (this.callList.length === 1) {\n                                          setTimeout(() => {\n                                              this.$message({\n                                                  message: '即将结束通话',\n                                                  type: 'warning'\n                                              })\n                                          }, 1000)\n                                          setTimeout(() => {\n                                              this.roomName = ''\n                                              this.onlineCallShow = false\n                                              document.getElementById('callout').pause()\n                                              document.getElementById('off').play()\n                                              this.myRoom.leaveRoom()\n                                          }, 3000)\n                                      }\n                                  }\n                              })\n                          }\n                      }, 60000)\n                  } else {\n                      this.$message({\n                          showClose: true,\n                          message: item.nick_name + '正在通话中',\n                          type: 'error'\n                      })\n                  }\n              }\n              let re = {\n                  fromUser: this.myInfo.accountID,\n                  toUser: ary.join(','),\n                  msgType: 'qnNotice',\n                  msgTime: new Date().getTime(),\n                  msgObj: {\n                      appId: 'e6tc2sxx0',\n                      roomName: this.roomName,\n                      reason: this.textarea,\n                      st: 0 // 0-发起 1-确认ok 2- 拒绝/系统30s自动挂断\n                  }\n              }\n              // 发送语音通话请求\n              this.$store.dispatch('POP_POST_SENDTALKMSG', re).then(reo => {\n                  let req = {\n                      appId: 'e6tc2sxx0',\n                      accountID: this.myInfo.accountID,\n                      roomName: this.roomName,\n                      permission: 'admin',\n                      expireAt: '3600'\n                  }\n                  // 获取房间token\n                  this.$store.dispatch('POP_POST_APPTOKEN', req).then((res) => {\n                      this.clickItemUserList = []\n                      this.callUserList = []\n                      joinRoom(res.data, this.roomName)\n                  })\n                  // if (reo.msgID) {\n                  //\n                  // } else {\n                  //   this.$message({\n                  //     showClose: true,\n                  //     message: '对方不在线',\n                  //     type: 'error'\n                  //   })\n                  // }\n              })\n          } else {\n              // 新建通话\n              this.callList = []\n              this.$set(this.myInfo, 'online', true)\n              this.callList.push(this.myInfo)\n              let arr = []\n              for (let item of this.clickItemUserList) {\n                  let a = 0\n                  for (let i of this.callList) {\n                      if (i.accountID === item.accountID) {\n                          a = 1\n                      }\n                  }\n                  if (a === 0) {\n                      arr.push(item.accountID)\n                      // 获取房间暂未加入人员基本信息\n                      console.log(item, 102155555555555555555555555555555)\n                      this.$set(item, 'online', false)\n                      this.$set(item, 'user_name', item.nick_name)\n                      this.callList.push(item)\n                      this.timeout = setTimeout(() => {\n                          console.log(item)\n                          if (!item.online) {\n                              this.$message({\n                                  message: item.user_name + '未接听通话',\n                                  type: 'warning'\n                              })\n                              this.callList.forEach((item1, index) => {\n                                  console.log(item1, index)\n                                  if (item1.accountID === item.accountID) {\n                                      this.callList.splice(index, 1)\n                                      if (this.callList.length === 1) {\n                                          setTimeout(() => {\n                                              this.$message({\n                                                  message: '即将结束通话',\n                                                  type: 'warning'\n                                              })\n                                          }, 1000)\n                                          setTimeout(() => {\n                                              this.roomName = ''\n                                              this.onlineCallShow = false\n                                              document.getElementById('callout').pause()\n                                              document.getElementById('off').play()\n                                              this.myRoom.leaveRoom()\n                                          }, 3000)\n                                      }\n                                  }\n                              })\n                          }\n                      }, 60000)\n                  }\n              }\n              this.$store.dispatch('POP_POST_INITROOM', {appId: 'e6tc2sxx0', accountID: this.myInfo.accountID}).then((rea) => {\n                  console.log(rea)\n                  this.roomName = rea.roomName\n                  let ary = []\n                  for (let item of this.clickItemUserList) {\n                      ary.push(item.accountID)\n                  }\n                  let re = {\n                      fromUser: this.myInfo.accountID,\n                      toUser: ary.join(','),\n                      msgType: 'qnNotice',\n                      msgTime: new Date().getTime(),\n                      msgObj: {\n                          appId: 'e6tc2sxx0',\n                          roomName: rea.roomName,\n                          reason: this.textarea,\n                          st: 0 // 0-发起 1-确认ok 2- 拒绝/系统30s自动挂断\n                      }\n                  }\n                  console.log(re, 'sendtalkmsg111111111111')\n                  // 发送语音通话请求\n                  this.$store.dispatch('POP_POST_SENDTALKMSG', re).then(reo => {\n                      console.log(rea, 'sendtalkmsg22222222222')\n                      let req = {\n                          appId: 'e6tc2sxx0',\n                          accountID: this.myInfo.accountID,\n                          roomName: rea.roomName,\n                          permission: 'admin',\n                          expireAt: '3600'\n                      }\n                      // 获取房间token\n                      this.$store.dispatch('POP_POST_APPTOKEN', req).then((res) => {\n                          this.clickItemUserList = []\n                          this.callUserList = []\n                          joinRoom(res.data, rea.roomName)\n                      })\n                  })\n              })\n          }\n          let _this = this\n          let ado = document.getElementById('ado')\n          async function joinRoom (roomToken, roomName) {\n              try {\n                  // 加入房间\n                  await _this.myRoom.joinRoomWithToken(roomToken)\n                  _this.$store.dispatch('POP_POST_INITROOM', {appId: 'e6tc2sxx0', accountID: _this.myInfo.accountID}).then((reb) => {\n                      // 获取房间所有人信息\n                      _this.$store.dispatch('POP_POST_LISTUSER', {appId: 'e6tc2sxx0', roomName: roomName}).then((res) => {\n                          console.log(res, 5555555656568566)\n                          if ((JSON.parse(res.data.body).users).length > 0) {\n                              for (let item of JSON.parse(res.data.body).users) {\n                                  let a = 0\n                                  for (let i of _this.callList) {\n                                      if (i.accountID === item.userId) {\n                                          a = 1\n                                      }\n                                  }\n                                  if (a === 0) {\n                                      // 获取房间暂未加入人员基本信息\n                                      _this.$store.dispatch('POP_POST_GETMYSELFINFO', {accountID: item.userId}).then((rep) => {\n                                          // 加入房间\n                                          _this.$set(rep, 'online', true)\n                                          _this.callList.push(rep)\n                                      })\n                                  }\n                              }\n                          }\n                      })\n                  })\n                  // 订阅房间中已经存在的 tracks\n                  subscribeTracks(_this.myRoom.trackInfoList)\n              } catch (e) {\n                  console.error(e)\n                  this.roomName = ''\n                  document.getElementById('callout').pause()\n                  document.getElementById('off').play()\n                  this.myRoom.leaveRoom()\n                  alert(`加入房间失败！ErrorCode: ${e.code || ''}`)\n                  return\n              }\n              // user-join 房间有除自己以外的新用户加入\n              _this.myRoom.on('user-join', user => {\n                  document.getElementById('callout').pause()\n                  for (let i of _this.callList) {\n                      if (i.accountID === user.userId) {\n                          _this.$set(i, 'online', true)\n                      }\n                  }\n              })\n              // track-add 房间中有其他用户发布了 Track\n              _this.myRoom.on('track-add', tracks => {\n                  console.log('new tracks', tracks, 222222222222222222222)\n              })\n              // 监听房间中其他人发布的 Track，自动订阅它们\n              _this.myRoom.on('track-add', (tracks) => {\n                  subscribeTracks(tracks)\n              })\n              _this.myRoom.on('user-leave', user => {\n                  console.log('user leave!', user, 9556565656566)\n                  _this.callList.forEach((item, index) => {\n                      console.log(item, index)\n                      if (item.accountID === user.userId) {\n                          _this.callList.splice(index, 1)\n                          if (_this.callList.length === 1) {\n                              _this.$message({\n                                  message: item.user_name + '已中断通话',\n                                  type: 'warning'\n                              })\n                              setTimeout(() => {\n                                  _this.$message({\n                                      message: '即将结束通话',\n                                      type: 'warning'\n                                  })\n                              }, 1000)\n                              setTimeout(() => {\n                                  _this.roomName = ''\n                                  _this.onlineCallShow = false\n                                  document.getElementById('callout').pause()\n                                  document.getElementById('off').play()\n                                  _this.myRoom.leaveRoom()\n                              }, 3000)\n                          }\n                      }\n                  })\n              })\n              // 自动发布\n              await publish()\n          }\n          async function publish () {\n              console.log(QNRTC.deviceManager, 99999)\n              // 这个函数会返回一个列表，列表中每一项就是一个音视频轨对象\n              const localTracks = await QNRTC.deviceManager.getLocalTracks({\n                  audio: {enabled: true, tag: 'audio'}\n              })\n              console.log('my local tracks', localTracks)\n              // 将刚刚的 Track 列表发布到房间中\n              await _this.myRoom.publish(localTracks)\n              console.log('publish success!')\n              // for (const track of localTracks) {\n              //   track.play(ado)\n              // }\n          }\n          function subscribeTracks (trackInfoList) {\n              // 批量订阅 tracks，并在页面上播放\n              _this.myRoom.subscribe(trackInfoList.map(t => t.trackId)).then(tracks => {\n                  for (const track of tracks) {\n                      track.play(ado)\n                  }\n              })\n          }\n      },\n      // 确认呼叫\n      sureCall () {\n          if (this.roomName && !this.againVit) {\n              this.$confirm('您正在通话中，是否挂掉当前通话，建立新的通话？', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n              }).then(() => {\n                  this.$store.commit('updateOnlineCallShow', false)\n                  this.roomName = ''\n                  document.getElementById('callout').pause()\n                  document.getElementById('off').play()\n                  this.myRoom.leaveRoom()\n                  this.callList = []\n                  this.createRoom()\n              }).catch(() => {\n                  return false\n              })\n          } else {\n              this.createRoom()\n          }\n      },\n  },\n  filters:{\n    timeFormat:function(v){\n       let time = Date.parse(new Date())\n      let diff = (time/1000)-v\n      let t = new Date(v*1000) //86400 504780\n      if(diff<300&&diff>60){\n       return parseInt(diff/60)+'分钟前'\n      }else{\n        return  t.toLocaleString()\n      }\n    },\n    diff:function(v){\n      let timeStamps = Date.parse(new Date())/1000\n      let diff = timeStamps-v\n       (Math.floor((diff/60/60)*100)/100).toString().split('.')[0]+'小时'+(Math.floor((diff/60/60)*100)/100).toString().split('.')[1]+'分钟'\n    }\n  },\n  computed:{\n      disabled () {\n        return this.loading || this.noMore\n      }\n  },\n  watch:{\n    currentServiceNum:function(v){\n      this.currentService=\"当前服务(\"+v+\")\"\n    },\n    innerLeftList:function(v){\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAicfile":"index.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"main\">\n    <!-- 导航开始 -->\n    <div class=\"nav-bar\">\n      <div class=\"nav-left\">\n        <img  src=\"../assets/kefulogo.jpg\" :onerror=\"errorImgSrc\" alt=\"\">\n        <div>\n        <h3 @click=\"updataMapOverview\">加马——船帮帮客服工作平台</h3>\n        <p>Jiama Service</p>\n        </div>\n      </div>\n      <div class=\"nav-right\">\n        <img :src=\"userInfo.headPic\" :onerror=\"errorImgSrc\" alt=\"\">\n        <div>\n        <p>{{userInfo.nickName}}</p>\n        </div>\n        <button @click=\"workquit\">准备下班 <i class=\"iconfont icon-shangxiaban-copy\"></i> </button>\n      </div>\n    </div>\n    <audio id=\"callout\" src=\"./public/callout.mp3\"></audio>\n    <audio id=\"off\" src=\"./public/off.mp3\"></audio>\n     <!-- 确认下班 dialog-->\n        <!-- <el-dialog\n          :visible.sync=\"dialogVisibleOff\"\n          width=\"30%\"\n          center>\n          <div class=\"dialogVisibleOff\">\n            <div >\n              <i class=\"iconfont icon-guanbi\"></i>\n              <p class=\"guanbi-p\" style=\"color: #ff5f49;\">下班退出</p>\n            </div>\n        <p style=\"margin-top: 50px;margin-bottom: 20px;\">今天已经工作了</p>\n        <p  style=\"font-size: 20px; font-weight: bold; color: black;\">{}小时{}分钟{}秒</p>\n        <button class=\"Off-button\">\n          确认下班\n        </button>\n        <p style=\"font-size: 16px;color: #4ed7d1;\" @click=\"dialogVisibleOff=false\">\n          我点错了，继续努力\n        </p>\n\n      </div>\n    </el-dialog> -->\n    <!-- 咨询刮起确认下班 -->\n     <!-- <el-dialog\n      :visible.sync=\"dialogVisiblereadyOff\"\n      width=\"30%\"\n      center>\n      <div class=\"dialogVisibleOff\">\n        <div >\n          <i class=\"iconfont icon-guanbi\"></i>\n          <p class=\"guanbi-p\" style=\"color:#4cd1cc\">准备下班</p>\n        </div>\n\n        <p style=\"margin-top: 50px;margin-bottom: 20px;\">有效的消息能让我们的工作效率更加提高</p>\n        <p  >点击准备下班将不会再为您介入新的咨询用户</p>\n        <button class=\"Off-button\" style=\"background-color:#4ed7d1\">\n          确认\n        </button>\n        <p style=\"font-size: 16px;color: #4ed7d1;\" @click=\"dialogVisiblereadyOff=false\">\n          我点错了，继续努力\n        </p>\n\n      </div> -->\n    <!-- </el-dialog> -->\n    <!-- 咨询刮起确认下班 -->\n     <el-dialog\n      :visible.sync=\"readyWorkOut\"\n      width=\"30%\"\n      center>\n      <div class=\"dialogVisibleOff\">\n        <div >\n          <i class=\"iconfont icon-guanbi\"></i>\n          <p class=\"guanbi-p\" style=\"color:#ff5f49\">下班退出</p>\n        </div>\n        <p class=\"dialog-p\" style=\"margin-top: 20px;margin-bottom: 20px;\">今天已经工作了</p>\n        <p style=\"font-size: 18px; font-weight: bold; color: black;\">{{duration}}</p>\n\n        <p v-if=\"this.innerLeftList.length>=1\" class=\"dialog-p\" style=\"margin-top: 20px;margin-bottom: 20px;\">当前有{{this.innerLeftList.length}}个咨询对话未结束</p>\n        <p v-if=\"this.innerLeftList.length>=1\" class=\"dialog-p\">您可以选择移交给别的客服进行服务</p>\n        <button v-if=\"this.innerLeftList.length>=1\"  @click=\"transfer\" class=\"Off-button\" style=\"background-color:#4ed7d1; margin-top: 22px;\">\n          移交咨询\n        </button>\n        <button  @click=\"holdout\" class=\"Off-button\" style=\"background-color:#ff5f49;  margin-bottom: 21px;\">\n          确定下班\n        </button>\n        <p style=\"font-size: 16px;color: #4ed7d1;margin-bottom: 10px;\" @click=\"dialogVisiblereadyOff=false\">\n          我点错了，继续努力\n        </p>\n\n      </div>\n    </el-dialog>\n     <!-- 准备下班 -->\n     <el-dialog\n      :visible.sync=\"dialogVisibleTransfer\"\n      width=\"760px\"\n      title='移交给'\n      center>\n      <div class=\"dialogTransfer\">\n        <div v-for=\"(item,index) in TranserList\" :key=\"index\" @click=\"SelectTransfer(item,index)\"> \n          <span>\n            <i class=\"iconfont icon-selected\" v-if=\"Tindex==index\" ></i>\n            <i class=\"iconfont icon-yuan\" v-if=\"Tindex!==index\"></i>\n          </span>\n          <img :src=\"item.headPic\" alt=\"\">\n          <p>{{item.nickName}}</p>\n        </div>\n      </div>\n      <div  class=\"endOrder-button\">\n       <button @click=\"dialogVisibleTransfer=false\">取消</button> <button @click=\"userTransfer\">确认</button>\n     </div>\n    </el-dialog>\n    <!-- 导航结束 -->\n    <!-- inner start -->\n    <div class=\"inner\">\n      <!-- 左边侧栏开始 -->\n    <div class=\"inner-left\">\n      <el-tabs type=\"border-card\" style=\"width: 100%;\" >\n        <el-tab-pane :label=\"currentService\" >\n      <ul>\n        <li v-for=\"(item,idx) in innerLeftList\" :key = idx  @click=\"getMessageInfo(item,idx,'start')\" style=\"\">\n          <div class=\"inner-left-li-list\"  :class=\"idx==index? 'messageListStyle' : ' '\">\n\n            <img :src=\"item.user_avatar\" alt=\"\">\n            <div>\n                <p >{{item.user_name}}</p>\n                <span>{{item.start_time | timeFormat}}</span>\n            </div>\n            <div class=\"tip\" v-if=\"item.tip>0\">{{item.tip}}</div>\n            <div class=\"leftListCover\" v-if=\"item.leftListCover\">\n              当前服务单已被用户结束\n            </div>\n          </div>\n        </li>\n      </ul>\n    </el-tab-pane>\n    <el-tab-pane label=\"已结束服务\">\n      <ul>\n        <li v-for=\"(item,endidx) in endOrderList\" :key = endidx @click=\"getMessageInfo(item,endidx,'end')\">\n          <div class=\"inner-left-li-list\"  :class=\"endidx==endindex? 'messageListStyle' : ' '\" >\n            <img :src=\"item.user_avatar\" alt=\"\">\n            <div >\n                <p >{{item.user_name}}</p>\n                <span>5分钟前</span>\n            </div>\n          </div>\n        </li>\n      </ul>\n      </el-tab-pane>\n      </el-tabs>\n    </div>\n    <!-- 左边侧栏结束 -->\n    <!-- 地图开始 -->\n    <div class=\"locationSign\">\n      位置: {全国}\n    </div>\n    <div class=\"SwitchPage\" @click=\"SwitchPage\" v-show='containerVisible2'>\n      点击进入抢单页面\n    </div>\n    <div class=\"seachLocation\" v-show='containerVisible2'>\n      <div class=\"\">\n      <i class=\"iconfont icon-iconfontzhizuobiaozhun22\"></i> <input type=\"text\" id=\"suggestId\" size=\"20\" placeholder=\"用户附近搜索\" style=\"width:150px;\" />\n      </div>\n      <div id=\"searchResultPanel\" style=\"border:1px solid #C0C0C0;width:150px;height:auto; display:none;\"></div>\n    </div>\n    <div v-show='containerVisible' id=\"container\">\n    </div>\n    <div v-show='containerVisible2' id=\"container2\">\n    </div>\n    <!-- 地图结束 -->\n    <!-- 结束咨询开始 end order -->\n    <el-dialog\n          class=\"endOrder\"\n          :visible.sync=\"dialogVisibleEndOrder\"\n          width=\"38%\"\n          title=\"结束咨询\"\n          center>\n         <div  class=\"endOrder-time\">\n          <div >\n            <p>咨询时间</p>\n            <p class=\"time bg\">{{startTime}}</p>\n          </div>\n          <div >\n            <p>结束时间</p>\n            <p class=\"time bg\">{{endTime}}</p>\n          </div>\n          <div >\n            <p>服务时长</p>\n            <p class=\"time\">{{duration}}</p>\n          </div>\n         </div>\n         <!-- 地址 -->\n         <div  class=\"endOrder-adress\">\n           <p>咨询地址</p>\n           <div v-if=\"edit==0\" class=\"bg text\">请输入地址</div>\n           <input v-else-if=\"edit==1\" class=\"bg\" type=\"text\" placeholder=\"请输入地址\" v-model=\"inputEndOrderAdress\">\n            <i class=\"iconfont icon-iconfront-\" @click=\"edit=1\"></i>\n         </div>\n          <!-- 问题描述 -->\n         <div  class=\"endOrder-desc\">\n           <p>咨询问题描述</p>\n          <el-input\n          type=\"textarea\" class=\"bg\"\n          :autosize=\"{ minRows: 5, maxRows: 20}\"\n          placeholder=\"请输入内容\"\n          v-model=\"textareaEndOrderDesc\">\n        </el-input>\n         </div>\n         <div  class=\"endOrder-button\">\n           <button @click=\"dialogVisibleEndOrder=false\">取消</button> <button @click=\"EndOrder\">确认</button>\n         </div>\n        </el-dialog>\n    <!--  呼叫列表弹出  -->\n    <div v-if=\"callShow\" class=\"callListDialog\">\n        <div class=\"userListBox\">\n            <div class=\"header\">\n                选择呼叫的人员\n                <i @click=\"hiddenDialog\" class=\"el-icon-close\"></i>\n            </div>\n<!--            v-if=\"userInfo.userId !== item.userId\"-->\n            <ul v-if=\"callUserList.length !== 0\">\n                <li @click=\"ischeck(item)\" v-for=\"(item,index) in callUserList\" :key=\"index\">\n                    <i v-if=\"!item.check\" class=\"iconfont icon-weigouxuan\"></i>\n                    <i v-if=\"item.check\" class=\"iconfont icon-gouxuan-xuanzhong-yuankuang\"></i>\n                    <img :src=\"item.headPic\" alt=\"\">\n                    <span>{{item.nickName}}</span>\n                </li>\n            </ul>\n            <div v-if=\"callUserList.length !== 0\" class=\"buttonBox\">\n                <!--          <el-button @click=\"allCheck\">选择全部</el-button>-->\n                <el-button @click=\"allNoCheck\" type=\"info\">全部取消</el-button>\n                <el-button @click=\"startCall\" type=\"primary\">开始呼叫 ({{clickItemUserList.length}}人)</el-button>\n            </div>\n            <div style=\"width: 100%; text-align: center; height: 300px; line-height: 300px;letter-spacing: 3px; font-size: 22px; color: #ccc\" v-if=\"callUserList.length === 0\">无在线人员</div>\n        </div>\n    </div>\n        <!--  个人信息弹出  -->\n    <div v-if=\"infoShow\" class=\"callListDialog infoDialog\">\n            <div class=\"infoBox\">\n                <div v-if=\"clickItemUserList.length === 1\" class=\"info\">\n                    <img :src=\"clickItemUserList[0].headPic\" alt=\"\">\n                    <span>{{clickItemUserList[0].nickName}}</span>\n                </div>\n                <ul v-if=\"clickItemUserList.length > 1\">\n                    <li v-for=\"(item,index) in clickItemUserList\" :key=\"index\">\n                        <img :src=\"item.headPic\" alt=\"\">\n                        <span>{{item.nickName}}</span>\n                    </li>\n                </ul>\n                <div class=\"textarea\">\n                    <el-input\n                            type=\"textarea\"\n                            :rows=\"3\"\n                            :maxlength = \"72\"\n                            resize = \"none\"\n                            placeholder=\"请输入呼叫理由(最多72个字)\"\n                            v-model=\"textarea\">\n                    </el-input>\n                    <el-button @click=\"sureCall\" type=\"primary\">确认呼叫</el-button>\n                    <p @click=\"infoShow = false\">我点错了</p>\n                </div>\n            </div>\n        </div>\n    <!--  个人信息弹出  -->\n    <div v-if=\"roomAdminShow\" class=\"callListDialog roomDialog\">\n        <div class=\"infoBox\">\n            <div class=\"info\">\n                <img :src=\"clickItemUser.headPic\" alt=\"\">\n                <span>{{clickItemUser.nickName}}</span>\n            </div>\n            <div class=\"textarea\">\n                <el-button @click=\"kickoutUser\" type=\"primary\">踢出通话</el-button>\n                <p @click=\"roomAdminShow = false\">关闭</p>\n            </div>\n        </div>\n    </div>\n    <!--  在线呼叫通话页面弹出  -->\n    <div v-if=\"onlineCallShow\" class=\"onlineCallDialog\">\n        <img class=\"bg\" src=\"../assets/kefulogo.jpg\" alt=\"\">\n        <div class=\"title\">在线呼叫 {{callList.length}}人</div>\n        <ul class=\"clearfix\">\n            <li @click=\"toAdminRoom(item)\" v-for=\"(item,index) in callList\" :key=\"index\">\n                <div v-if=\"!item.online\"><i class=\"el-icon-more\"></i></div>\n                <img :src=\"item.headPic\" alt=\"\">\n                <span :class=\"!item.online?'ccc': ''\">{{item.nickName}}</span>\n            </li><li v-if=\"callList.length < 9\" @click=\"addCallUser\" class=\"add\">\n            <i class=\"el-icon-circle-plus-outline\"></i>\n            <span>添加</span>\n        </li>\n        </ul>\n        <div id=\"ado\"></div>\n        <div class=\"btn\">\n            <span @click=\"leaveRoom\"><i class=\"iconfont iconguaduan\"></i></span>\n            <i @click=\"toMetud(true)\" v-if=\"!metud\" class=\"el-icon-microphone\"></i>\n            <i @click=\"toMetud(false)\" v-if=\"metud\" class=\"el-icon-turn-off-microphone\"></i>\n        </div>\n    </div>\n    <!--结束咨询结束  -->\n    <!-- 内容右侧核心功能开始 -->\n       <el-dialog\n      :visible.sync=\"WxAcodeVisible\"\n      width=\"40%\"\n      title='添加协助人员'\n      center>\n      <div class=\"WxAcodeDiv\" style=\"text-align: center;\">\n          <div>\n            微信扫描下方二维码，分享协助邀请给你的微信好友，邀请好友进来协助。\n          </div>\n          <img :src=\"WxAcode\" />\n        </div>\n    </el-dialog>\n    <div class=\"inner-right\" v-show=\"innerRightVisible\">\n      <div class=\"inner-right-nav\">\n        <span class=\"inner-right-nav-span\">当前服务</span>\n        <div style=\"width:67%;overflow: hidden;\">\n        <img v-for=\"(item,index) in innerRightOrderMember\" :key = \"index\" :src=\"item.headPic\" :onerror=\"errorImgSrc\" :title=\"item.nickName\">\n        </div>\n         <i class=\"iconfont icon-jiahao\" @click=\"getWxAcode\" v-show=\"this.currentServiceInfo.option == 'start'\"></i>\n        <p class=\"inner-right-nav-p\" v-show=\"this.currentServiceInfo.option == 'start'\" @click='EndOrderStart'>\n          结束咨询\n        </p>\n      </div>\n      <!-- socket 消息列表 -->\n      <div class=\"inner-right-content\" id=\"socketMessageList\" >\n        <p class=\"loadingStyle\" v-if=\"loading\">\n          <img :src=\"loadingImg\" alt=\"\" >\n        </p>\n        <p class=\"loadingStyle\" v-if=\"noMore\">没有更多了</p>\n        <ul id=\"socketMessageListUl\"  class=\"list\"> \n          <li v-for=\"(item,index) in chatMessageList\" :key ='index'  class=\"list-item\">\n              <!-- 普通消息 -->\n              <div v-if=\"item.msgType=='groupText' ||  item.msgType=='groupPic' ||  item.msgType=='groupVoice' || item.msgType=='groupMap'\" :class=\"messageStyle(item.accountID)\" >\n                <img class=\"message-item-pic\" :src=\"item.msgObj.sh\" alt=\"\" >\n                <div data-v-79408788=\"\" class=\"flex message-box\">\n                  <div>\n                    <div class=\"message-box-top\"><span class=\"name\">{{item.msgObj.sn}}</span> <span class=\"day\">{{item.msgTime | timeFormat}}</span> </div>\n                    <div class=\"bubble_cont basi left\">\n                      <!-- 消息文本 -->\n                      <div v-if=\"item.msgType=='groupText'\" class=\"card1\">\n                        <p class=\"puretext font14 c333 wordbreak\" style=\"height: auto;\">{{item.msgObj.text}}</p>\n                      </div>\n                      <!-- 音频消息 -->\n                      <div v-else-if=\"item.msgType=='groupVoice'\" class=\"card1\">\n                        <video controls  name=\"media\">\n                        <source type=\"audio/aac\" :src=\"item.msgObj.vu[0].url\"/>\n                        </video>\n                      </div>\n                      <!-- 地图消息 -->\n                      <div v-else-if=\"item.msgType=='groupMap'\" class=\"card1\">\n                        <!-- 创建地图定位 -->\n                        <div :id=\"'groupMap'+item.msgTime\" class=\"groupMap\">\n                        </div>\n                      </div>\n                      <!-- 图片消息 -->\n                      <div v-else-if=\"item.msgType=='groupPic'\" accept = \"image/*\" class=\"card1\">\n                        <img :src=\"item.msgObj.url\"  alt=\"\">\n                      </div>\n                    </div>\n                  </div>\n                </div>\n            </div>\n            <!-- 系统消息 -->\n            <p class=\"systemMessage\" v-else-if=\"item.msgType=='kfNotice' ||  item.msgType=='kfWelcome' ||  item.msgType=='kfEnd'\">\n                {{item.msgObj.content}}\n            </p>\n            <p class=\"systemMessage\" v-else-if=\"item.msgType=='groupEnd'\">\n                {{item.msgObj.content}}\n            </p>\n            <div class=\"userMessage\" v-else-if=\"item.msgType=='userState'\">\n                <p v-if=\"item.msgObj.st==1\">\n                 {{item.msgTime | timeFormat}} {{item.msgObj.un}}上线了\n                </p>\n                <p v-if=\"item.msgObj.st==0\">\n                 {{item.msgTime | timeFormat}} {{item.msgObj.un}}下线了\n                </p>\n                <p v-if=\"item.msgObj.st==-1\">\n                 {{item.msgTime | timeFormat}} {{item.msgObj.un}}离开群组\n                </p>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <!-- 消息列表结束 -->\n      <!-- 消息输入 -->\n      <div class=\"inner-right-input\">\n       <el-input\n       @keydown.enter.native=\"sendMessageInfo(socketMessageText,'groupText')\"\n          type=\"textarea\"\n          :autosize=\"{ minRows: 5, maxRows: 5}\"\n          placeholder=\"请输入聊天内容\"\n          v-model=\"socketMessageText\">\n        </el-input>\n        <div class=\"inner-right-input-buttom\">\n          <div class=\"inner-right-input-buttom-left\">\n            <!-- 常用语 -->\n            <el-popover\n              ref=\"popover5\"\n              placement=\"top\"\n              v-model=\"visible2\">\n              <div class=\"CommonWord\">\n                  <p class=\"CommonTitle\">常用话</p>\n                <ul >\n                  <li v-for=\"(item,index) in this.commonWordList\" :key ='index'>\n                   <div class=\"content\">{{item}}</div> <div class=\"send\" @click=\"sendMessageInfo(item,'groupText')\">发送</div>\n                  </li>\n                </ul>\n              </div>\n            </el-popover>\n            <div v-popover:popover5>常用语</div>\n            <!-- 常见问题 -->\n            <el-popover\n              ref=\"popover4\"\n              placement=\"top\"\n              v-model=\"visible3\">\n              <div class=\"CommonWord\">\n                <p class=\"CommonTitle\">常见问题</p>\n                <ul>\n                  <li v-for=\"(item,index) in this.commonProblemList\" :key='index'>\n                   <div class=\"content\">\n                     {{item}}\n                    </div>\n                    <div class=\"send\" @click=\"sendMessageInfo(item,'groupText')\">\n                       发送\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </el-popover>\n            <div class=\"commonProblem\" v-popover:popover4>常见问题</div>\n            <div @click=\"sendLocation\">发送位置</div>\n          </div>\n          <div class=\"bottom-right\">\n            <div class=\"inner-right-input-buttom-right\">\n              <input type=\"file\" class=\"uploadInput\" id='uploadInput' accept=\"image/*\"  @change=\"sendImg\">\n              <i class=\"iconfont icon-tupian\"></i>\n                <i @click=\"toCall\" class=\"iconfont icon-lianxi1\"></i>\n            <i class=\"iconfont icon-yanjizhushou-shangchuan_maikefeng\" @click=\"Recording('start')\"> </i>\n            </div>\n            <div class=\"sendMessage button\" @click=\"sendMessageInfo(socketMessageText,'groupText')\" >发送</div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- 右侧核心功能结束 -->\n    <!-- inner end -->\n    </div>\n  </div>\n</template>\n\n<script>\nimport {mapState} from 'vuex'\nimport * as types from '@/store/mutation-types'\nimport Api from '../assets/js/api'\nimport axios from 'axios'\nimport utils from '../assets/js/utils'\nimport { setTimeout, setInterval } from 'timers';\nimport { async } from 'q';\nexport default {\n  beforeRouteEnter (to, from, next) {\n    console.log(to.path)\n    let url = window.location.href.split('?')[1] || \"\"\n    //获取url参数 存到session\n    if(url&&url!==\"\"){\n      url.split('&').forEach(item=>{\n        let query = item.split('=')\n        sessionStorage.setItem(query[0],query[1])\n      })\n    }\n    next()\n  },\n  created(){\n    //获取个人信息\n    this.ListData0={\n        \"status\":\"0\",\n        \"accountID\":this.accountID\n        },\n      this.ListData1={\n        \"status\":\"1\",\n        \"accountID\":this.accountID\n      },\n      this.ListData2 ={\n        \"status\":\"2\",\n        \"accountID\":this.accountID\n      }\n    this.$store.dispatch(types.GET_KF_INFO,this.accountID)\n    .then(res=>{\n      _this.userInfo = res\n      sessionStorage.setItem('userInfo',res)\n    }).catch(err=>console.log(err))\n\n    if(!sessionStorage.getItem(\"accountID\")){\n        this.$router.push('/login')\n    }\n    //socket  token\n    let _this = this\n    //刷新msgtoken 并且开启长连接\n    _this.$store.dispatch(types.REFRESH_MSG_TOKEN,{accountID:sessionStorage.getItem('accountID')})\n   .then(res=>{\n        initWebSocket()\n        function initWebSocket(){\n        //初始化websocket\n        //建立连接\n        _this.websocket = new WebSocket('wss://im-msg-weixin.jiama.online/wss')\n        //建立成功\n        _this.websocket.onopen = function (){ //连接成功事件\n        console.log('websocket success')\n          _this.websocket.send (JSON.stringify ({\n                opt: \"connect\",\n                accountID: _this.accountID,\n                msgToken: res.msgToken,\n                timestamp: 1559568992,\n                lat: 31.01, //登陆时纬度\n                lon: 121.01 //登陆时经度\n          }))\n          //获取已接单列表\n          _this.getListOrder(_this.ListData1)\n\n          //获取地图上未被接单的列表\n          _this.getPushListOrder(_this.ListData0)\n          //获取结束单列表\n          _this.getEndOrderList(_this.ListData2)\n        }\n        //建立失败\n          _this.websocket.onerror = function(){ //连接失败事件\n          console.log(\"WebSocket连接发生错误\");\n          //  this.reconnect();\n          }\n          //接受信息\n          _this.websocket.onmessage = function (event){ //接收服务器推送的信息\n            //打印收到的服务器内容\n            let data = JSON.parse(event.data)\n            console.log(data)\n            //开启心跳\n            start()\n            if(data.msgType==\"kfNotice\"){\n                let List = []\n                List.push(data)\n                console.log(data)\n                _this.updataPushMapOverview(List)\n                _this.openSuccess(\"系统推送一条新单\")\n            }else if(data.msgType==\"groupText\" ||  data.msgType=='groupPic' ||  data.msgType=='groupVoice' || data.msgType=='groupMap'){\n                  if(data.groupID==_this.currentServiceInfo.channelID){\n                    _this.chatMessageList.push(data)\n                    if(data.msgType==\"groupMap\"){\n                    data.msgObj.map = JSON.parse(data.msgObj.map)\n                    setTimeout(() => {\n                      let map = new BMap.Map('groupMap'+data.msgTime);    //\n                      let point = new BMap.Point(data.msgObj.map.lng, data.msgObj.map.lat);\n                      map.centerAndZoom(point, 19);\n                      let marker = new BMap.Marker(point)\n                      map.addOverlay(marker)\n                    }, 1)\n                  }\n                  _this.handleScroll()\n                  }else{\n                    // _this.innerLeftList.map(val)\n                  }\n            }else if(data.msgType==\"kfWelcome\" || data.msgType==\"kfEnd\" ){\n                _this.chatMessageList.push(data)\n            }else if(data.msgType==\"kfApply\"){\n              for (let it of _this.innerLeftList){\n                if(it.orderID == data.orderID){\n                  it.leftListCover = true\n                }\n              }\n            }else if(data.msgType==\"kfOrderSuccess\"){\n              setTimeout(()=>{\n              let div = document.getElementsByClassName('Overlay'+data.msgObj.orderID)\n              div.remove(div)\n\n              },50)\n            }\n            setTimeout(()=>{\n              _this.handleScroll()\n            },50)\n            \n          }\n        //连接关闭\n          _this.websocket.onclose = function (e){\n          clearTimeout(_this.timeoutObj)\n          console.log(\"connection closed (\" + e.code + \")\");\n          //重连\n          reconnect()\n          }\n      }\n      function reconnect(){//重新连接\n          if(_this.lockReconnect){\n            return\n          }\n          _this.lockReconnect = true\n          //如果没有连上会一直重连，设置延迟避免请求过多\n          _this.timeoutnum && clearTimeout(_this.timeoutnum);\n          _this.timeoutnum = setTimeout(function(){\n           // 新连接\n            initWebSocket()\n            _this.lockReconnect = false\n          },false)\n        }\n      function start(){//开启心跳\n        console.log('start  go')\n        let time = 0\n          _this.timeoutObj = setInterval(function(){\n            //这里发送一个心跳，后端收到后，返回一个心跳消息\n            console.log('.11')\n            let timeStamps = Date.parse (new Date ()) / 1000;\n              _this.websocket.send(JSON.stringify ({\n                opt: 'heart',\n                accountID: _this.accountID,\n                msgToken: _this.msgToken,\n                timestamp: timeStamps,\n                isKF: 1,\n                gps: [{\n                  E: 121.30692,\n                  N: 31.16184,\n                  V: 0,\n                  D: - 1,\n                  A: 13,\n                  T: timeStamps\n                }]\n              }));\n          },30000)\n        }\n    }).catch(err=>{\n      console.log(err)\n    })\n    //获取服务单列表\n  },\n  name: 'index',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      errorImgSrc: 'this.src=\"'+ require('../assets/ServiceLogo.png') + '\"',\n      orderhelp:require('../assets/orderhelp.jpg'),\n      orderSOS:require('../assets/orderSOS.jpg'),\n      loadingImg:require('../assets/loading.gif'),\n      clock:require('../assets/clock.png'),\n      currentO_id:\"\",\n      WxAcodeVisible:false,\n      WxAcode:'',//二维码bath64\n      containerVisible:true,\n      containerVisible2:false,\n      //客服个人信息\n      userInfo:{},\n      //工单推送信息\n      userPointLocationOrderInfo:[],\n      //右侧已推送工单列表\n      innerLeftList:[],\n      //获取左侧列表\n      ListData0:{},\n      ListData1:{},\n      ListData2 :{},\n      accountID:sessionStorage.getItem('accountID'),\n      accessToken:sessionStorage.getItem('accessToken'),\n      //右边长连接消息详情\n      innerRightMessageInfo:[],\n      //右边成员列表\n      innerRightOrderMember:[],\n      //当前服务\n      currentServiceNum:0,\n      currentService:\"当前服务(0)\",\n      //已结束服务单列表\n      endOrderList:[],\n      dialogVisibleTransfer:false,\n      TranserList:[],//转移在线客服列表,\n      commonWordList:['问候语ni好吗','我不好你个垃圾','我可以帮您查路况，查地点，设置导航位置，没事唠嗑也行！也可以帮你查周围的停车、加油等服务点。'],//常用语消息列表\n      commonProblemList:['车子有问题拿去卖破烂','车子没问题拿去卖铁'],\n      beTransfer:\"\",\n      edit:0,//是否编辑\n      inputEndOrderAdress:\"上海市-普陀区-镇坪路389号\",\n      textareaEndOrderDesc:\"请描述用户所咨询的问题\",\n      startTime:'',//咨询开始时间\n      endTime:'', //咨询结束时间\n      duration:'',\n      textarea: '',\n      currentAdvisory:0,//当前咨询个数\n      status: \"1\",\n      socketMessageText:\"\",\n      index:Number,//右侧列表下标\n      endindex:Number,\n      Tindex:Number, //转移下标\n      leftListActive:\"\",\n      visible2: false,\n      visible3: false,\n      innerRightVisible:false,\n      readyWorkOut:false,\n      dialogVisibleEndOrder:false,\n      ak: 'G1ZqRQeFuAutcV5NYPiVvdaMNQ5tWpp9',\n      currentServiceInfo:{},//当前服务信息,\n      map:{},//地图\n      map2:{},//地图\n      BMap:{},\n      currentGps:{},\n      searchLocation:{},//搜索当前地址\n      Overlay:{},\n      Point:{},\n      // socket 部分\n      msgToken:'',\n      websocket:null,//建立的连接\n      //消息列表部分\n      chatMessageList:[],\n      loading: false,\n      zcount:0,//当前个数\n      count:0,//总个数\n      page:0,//当前页数,\n      noMore:false,\n      recordingVisible:true, //录音对话框\n      lockReconnect:false,\n      timeout:2*1000,//30秒一次的心跳\n      timeoutObj:null,//心跳倒计时\n      serverTimeoutObj:null,//心跳倒计时\n      timeoutnum:null,//断开 重连倒计时\n      lastRunTime:Date.now(),//上次播放的时间\n      mapPoint:[],//实时地图位置\n      callShow: false,\n      callUserList: [\n          {\n              headPic: require('../assets/orderSOS.jpg'),\n              nickName: '放的地方',\n              userId: '556556'\n\n          },\n          {\n              headPic: require('../assets/orderSOS.jpg'),\n              nickName: '放的地方',\n              userId: '12566452'\n\n          }\n      ],\n      clickItemUserList: [],\n      infoShow: false,\n      roomName: '',\n      againVit: false,\n      myRoom: '',\n      roomAdminShow: false,\n      onlineCallShow: false,\n      myInfo: {},\n      callList: [\n          {\n              headPic: require('../assets/orderSOS.jpg'),\n              nickName: '放的地方',\n              userId: 'dfgdfg'\n          },\n          {\n              headPic: require('../assets/orderSOS.jpg'),\n              nickName: '放的地方',\n              userId: '12566452'\n\n          }\n      ],\n      clickItemUser: {\n          headPic: require('../assets/orderSOS.jpg'),\n          nickName: '放的地方',\n          userId: '12566452'\n      }\n    }\n  },\n\n  mounted(){\n    //渲染地图\n     var _this = this; \n     //推送单的列表的地图1\n      _this.map = new BMap.Map('container')\n      let map = _this.map\n      _this.map.centerAndZoom(new BMap.Point(116.328, 40.020), 15);\n      _this.map.enableScrollWheelZoom(true);\n      // 添加比例尺\n      // _this.map.addControl(new _this.BMap.ScaleControl());\n      _this.map.addControl(new BMap.ScaleControl()); \n      // 添加缩略地图\n      _this.map.addControl(new BMap.OverviewMapControl());\n    // })\n    //推送myGPS地图2\n     _this.map2 = new BMap.Map('container2')\n      let map2 = _this.map2\n      _this.map2.centerAndZoom(new BMap.Point(116.328, 40.020), 15);\n      _this.map2.enableScrollWheelZoom(true);\n      // 添加比例尺\n      // _this.map.addControl(new _this.BMap.ScaleControl());\n      _this.map2.addControl(new BMap.ScaleControl()); \n      // 添加缩略地图\n      _this.map2.addControl(new BMap.OverviewMapControl());\n    document.getElementById('socketMessageList').addEventListener('scroll', this.loadingScroll)\n    //自动完成搜索地址并找到并发送\n    function G(id) {\n      return document.getElementById(id);\n    }      // 初始化地图,设置城市和地图级别。\n\n    var ac = new BMap.Autocomplete(    //建立一个自动完成的对象\n      {\"input\" : \"suggestId\"\n      ,\"location\" : map2\n    });\n\n      ac.addEventListener(\"onhighlight\", function(e) {  //鼠标放在下拉列表上的事件\n      var str = \"\";\n        var _value = e.fromitem.value;\n        var value = \"\";\n        if (e.fromitem.index > -1) {\n          value = _value.province +  _value.city +  _value.district +  _value.street +  _value.business;\n        }    \n        str = \"FromItem<br />index = \" + e.fromitem.index + \"<br />value = \" + value;\n        \n        value = \"\";\n        if (e.toitem.index > -1) {\n          _value = e.toitem.value;\n          value = _value.province +  _value.city +  _value.district +  _value.street +  _value.business;\n        }    \n        str += \"<br />ToItem<br />index = \" + e.toitem.index + \"<br />value = \" + value;\n        G(\"searchResultPanel\").innerHTML = str;\n      });\n\n      var myValue;\n      ac.addEventListener(\"onconfirm\", function(e) {    //鼠标点击下拉列表后的事件\n      var _value = e.item.value;\n        myValue = _value.province +  _value.city +  _value.district +  _value.street +  _value.business;\n        G(\"searchResultPanel\").innerHTML =\"onconfirm<br />index = \" + e.item.index + \"<br />myValue = \" + myValue;\n        \n        setPlace();\n      });\n\n      function setPlace(){\n\n        function myFun(){\n          var pp = local.getResults().getPoi(0).point;    //获取第一个智能搜索的结果\n          _this.searchLocation = pp\n          map2.centerAndZoom(pp, 18);\n          map2.addOverlay(new BMap.Marker(pp));    //添加标注\n          let BMap_Marker = document.querySelectorAll('span.BMap_Marker')\n            setTimeout(()=>{\n                for ( let it of BMap_Marker){\n                    it.remove(it)\n                  }\n          },5000)\n        }\n        var local = new BMap.LocalSearch(map2, { //智能搜索\n          onSearchComplete: myFun\n        });\n        local.search(myValue);\n      }\n      \n  },\n  methods:{\n    getWxAcode(){\n      //获取二维码\n      let _=this\n      this.WxAcodeVisible = true\n      let  timeStamp = Date.parse (new Date ()) / 1000;\n      let util =   utils.gainPhone({\n          appKey: '7863228592',\n          timestamp: timeStamp\n      })\n      axios({\n        url:'/oauth/getWxAcodeUnlimit',\n        method:'POST',\n        data:{\n           \"scene\":\"123456\",\n            \"page\":\"webpages/pages/webpage\"\n        },\n        headers:{\n          appKey: '7863228592',\n          timestamp: timeStamp,\n          sign: util\n        }\n      }).then(res=>{\n        console.log(res)\n        _.WxAcode =\"data:image/jpeg;base64,\" + res.data.RESULT\n      }).catch(err=>{\n        console.log(err)\n      })\n    },\n    SwitchPage(){ //抢单页面切换\n      this.containerVisible2 = false\n      this.containerVisible = true\n    },\n    SelectTransfer(item,index){ //选择当前客服\n      this.Tindex = index\n      this.beTransfer = item\n\n    },\n    userTransfer(){ //转移客服\n      let _ = this\n      let data = {\n        kfInfo :this.beTransfer,\n        userInfo:this.userInfo\n      }\n      console.log(data)\n      Api.changeKf(\n        data\n      ).then(res=>{\n        if(res=='success'){\n          _.getListOrder(_.ListData1)\n          _.innerRightVisible = false\n          _.openSuccess('移交成功')\n        }else{\n          _.onerror(\"移交失败\")\n        }\n        _.dialogVisibleTransfer = false\n      }).catch(err=>{\n        console.log(err)\n        _.onerror(\"移交失败\")\n      })\n\n    },\n    transfer(){\n      this.readyWorkOut = false\n      this.dialogVisibleTransfer = true\n      let _this = this\n      Api.getKfList(\n        {\n          \"spID\": this.userInfo.spID\n        }\n      ).then(res=>{\n        console.log(res)\n        _this.TranserList = res\n      }).catch(err=>{\n        console.log(err)\n      })\n    },\n    holdout(){\n      this.$router.push('/login')\n    }, \n    workquit(){\n      this.readyWorkOut=true\n      this.currentAdvisory = this.innerLeftList.length\n    },\n    //第一次加载页面刷新覆盖物\n    updataMapOverview(list){\n      var _this = this;\n          //循环遍历增加页面推送工单\n          function picOverlay(point,data){\n          //创建页面自定义覆盖物原型方法\n            this._point = point;\n            this.data = data\n          }\n          picOverlay.prototype = new BMap.Overlay()\n          picOverlay.prototype.initialize = function(map){\n            this._map = map\n            let div = this._div = document.createElement('div');\n            div.style.position = 'absolute'\n            div.style.overflow = 'hidden'\n            div.style.fontSize = '12px'\n            div.style.textAlign = 'center'\n            div.style.cursor = 'pointer'\n            div.className = 'Overlay'+this.data.orderID\n            div.style.zIndex = BMap.Overlay.getZIndex(this._point.lat);\n            let p = this._p = document.createElement('p')\n            let img = this._img = document.createElement('img')\n            let tipImg = this._tipImg = document.createElement('img')\n            p.appendChild(document.createTextNode(this.data.nickName))\n            img.setAttribute('src',this.data.headPic)\n            tipImg.setAttribute('src',_this.orderhelp)\n            //设置图片样式\n            img.style.width ='30px'\n            img.style.height ='30px'\n            img.style.border = '2px solid #005ced'\n            img.style.boxShadow = '0px 0px 8px #005ced'\n            img.style.borderRadius = '50px'\n            //设置tip图片样式\n            tipImg.style.width ='118px'\n            tipImg.style.height ='65px'\n            let Cdiv = document.createElement('div')\n            Cdiv.className = 'ClockTime'\n            Cdiv.style.backgroundColor= 'white';\n            Cdiv.style.display='inline-block';\n            Cdiv.style.padding= '4px';\n            Cdiv.style.borderRadius= '10px';\n            let Cimg = document.createElement('img')\n            Cimg.style.height = '20px'\n            Cimg.style.verticalAlign = 'middle'\n            Cimg.setAttribute('src',_this.clock)\n            let Cspan = document.createElement('span')\n            let _ = this\n            let Ctime = document.createTextNode(this.num)\n            let currentTime = Date.parse(new Date()) / 1000\n            let diff = currentTime-_.data.cTime<=0 ? 0 : currentTime-_.data.cTime\n            let h = Math.floor(diff/3600) \n            diff = diff % 3600\n            let m = Math.floor(diff/60)\n            diff = diff % 60\n            let s = diff \n\n            setInterval(()=>{ //增加正计时\n                s++\n                if(s>=60){\n                   s = 1\n                   m++\n                }\n                if(m>=60){\n                   h++\n                   m=0\n                }\n                Cspan.innerText =  h + '小时'+ m +'分钟' + s +'秒'\n            },1000)\n            let OverDiv = document.createElement('div')\n            Cspan.appendChild(Ctime)\n            Cdiv.appendChild(Cimg)\n            Cdiv.appendChild(Cspan)\n            OverDiv.appendChild(Cdiv) \n            div.appendChild(tipImg)\n            div.appendChild(OverDiv) //增加倒计时\n            div.appendChild(img)\n            div.appendChild(p)\n            //增加点击事件创建服务单\n            let data = this.data\n            //抢单事件\n            div.onclick = function(e){\n                //客服抢单时获取用户信息\n                console.log(_this.accountID)\n                  let userInfo = _this.userInfo\n                  console.log(userInfo)\n                  userInfo.lng = '116.358'\n                  userInfo.lat = '40.050'\n                  console.log(userInfo)\n                let QD_Data = {\n                  \"userInfo\":userInfo,\n                  \"orderID\" : data.orderID,\n                  \"channelID\":data.channelID\n                }\n                console.log(QD_Data)\n                _this.$store.dispatch(types.UPDATE_ORDER,QD_Data).then(res=>{\n                _this.openSuccess('抢单成功')\n                _this.getListOrder(_this.ListData1)\n                div.remove(div)\n              }).catch(err=>{\n                console.log(err)\n                _this.openError('抢单失败')\n              })\n              //获取正在服务服务单列表\n            }\n            _this.map.getPanes().labelPane.appendChild(div);\n              return div\n            }\n            picOverlay.prototype.draw = function(){\n              let map = this._map;\n              let pixel = map.pointToOverlayPixel(this._point)\n              this._div.style.left = pixel.x + \"px\";\n              this._div.style.top  = pixel.y - 30 + \"px\";\n            }\n          //遍历用户\n          if(list&&list[0]&&list.length>=1){\n              for (let it of list) {\n                let location =  {lng:it.lng,lat:it.lat}\n                let myOverlay = new picOverlay(location,it)\n                _this.map.addOverlay(myOverlay)\n            }\n          }\n    },\n    // 增加 / 更新 / 刷新页面 覆盖物\n    updataPushMapOverview(list){\n          var _this = this;\n          //循环遍历增加页面推送工单\n          //创建页面自定义覆盖物原型方法\n          function picOverlay(point,data){\n            this._point = point;\n            this.data = data\n          }\n          picOverlay.prototype = new BMap.Overlay()\n          picOverlay.prototype.initialize = function(map){\n            this._map = map\n            let div = this._div = document.createElement('div');\n            div.style.position = 'absolute'\n            div.style.overflow = 'hidden'\n            div.style.fontSize = '12px'\n            div.style.textAlign = 'center'\n            div.style.cursor = 'pointer'\n            div.className = 'Overlay'+this.data.orderID\n            div.style.zIndex = BMap.Overlay.getZIndex(this._point.lat);\n            let p = this._p = document.createElement('p')\n            let img = this._img = document.createElement('img')\n            let tipImg = this._tipImg = document.createElement('img')\n            p.appendChild(document.createTextNode(this.data.msgObj.nickName))\n            img.setAttribute('src',this.data.msgObj.headPic)\n            tipImg.setAttribute('src',_this.orderhelp)\n            console.log(this.data)\n            //设置图片样式\n            img.style.width ='30px'\n            img.style.height ='30px'\n            img.style.border = '2px solid #005ced'\n            img.style.boxShadow = '0px 0px 8px #005ced'\n            img.style.borderRadius = '50px'\n            //设置tip图片样式\n            tipImg.style.width ='118px'\n            tipImg.style.height ='65px'\n            //增加正计时开始\n            let Cdiv = document.createElement('div')\n            Cdiv.className = 'ClockTime'\n            Cdiv.style.backgroundColor= 'white';\n            Cdiv.style.display='inline-block';\n            Cdiv.style.padding= '4px';\n            Cdiv.style.borderRadius= '10px';\n            let Cimg = document.createElement('img')\n            Cimg.style.height = '20px'\n            Cimg.style.verticalAlign = 'middle'\n            Cimg.setAttribute('src',_this.clock)\n            let Cspan = document.createElement('span')\n            let _ = this\n            let Ctime = document.createTextNode(this.num)\n            let currentTime = Date.parse(new Date()) / 1000\n            let diff = currentTime-_.data.msgObj.cTime<=0 ? 0 : currentTime-_.data.msgObj.cTime\n            console.log('======')\n            console.log(currentTime-_.data.cTime)\n            console.log(diff)\n            let h = Math.floor(diff/3600) \n            diff = diff % 3600\n            let m = Math.floor(diff/60)\n            diff = diff % 60\n            let s = diff \n            setInterval(()=>{ //增加正计时\n                 h = m+1>=60 ? h+1 : h +1 >=60 ? 0 : h  \n                 m = s+1>=60 ? m+1 : m +1 >=60 ? 0 : m \n                 s = s+1>=60 ? 0 : s+1 \n              Cspan.innerText =  h + '小时'+ m +'分钟' + s +'秒'\n            },1000)\n            let OverDiv = document.createElement('div')\n            Cspan.appendChild(Ctime)\n            Cdiv.appendChild(Cimg)\n            Cdiv.appendChild(Cspan)\n            OverDiv.appendChild(Cdiv) \n            div.appendChild(tipImg)\n            div.appendChild(OverDiv) //增加倒计时结束\n            div.appendChild(img)\n            div.appendChild(p)\n            //增加点击事件创建服务单\n            let data = this.data\n            //抢单事件\n            //抢单事件\n            div.onclick = function(e){\n                let userInfo = _this.userInfo\n                  console.log(userInfo)\n                  userInfo.lng = '116.358'\n                  userInfo.lat = '40.050'\n                  console.log(userInfo)\n                let QD_Data = {\n                  \"userInfo\":userInfo,\n                  \"orderID\" : data.orderID,\n                  \"accountID\" : _this.accountID\n                }\n                _this.$store.dispatch(types.UPDATE_ORDER,QD_Data).then(res=>{\n                 _this.openSuccess('抢单成功')\n                _this.getListOrder(_this.ListData1)\n                  div.remove(div)\n              }).catch(err=>{\n                console.log(err)\n                _this.openError('抢单失败')\n              })\n              //获取正在服务服务单列表\n            }\n            _this.map.getPanes().labelPane.appendChild(div);\n              return div\n            }\n            picOverlay.prototype.draw = function(){\n              let map = this._map;\n              let pixel = map.pointToOverlayPixel(this._point)\n              this._div.style.left = pixel.x + \"px\";\n              this._div.style.top  = pixel.y - 30 + \"px\";\n            }\n          //遍历用户\n          console.log(list)\n          if(list&&list[0].msgObj&&list.length>=1){\n              for (let it of list) {\n                let location = {lng:it.msgObj.lng,lat:it.msgObj.lat}\n                let myOverlay = new picOverlay(location,it)\n                _this.map.addOverlay(myOverlay)\n            }\n\n          }\n    },\n    createPushMapUser(gps){\n          let _this = this\n          function picOverlay(point,data){\n          //创建页面自定义覆盖物原型方法\n            this._point = point;\n            this.data = data\n          }\n          picOverlay.prototype = new BMap.Overlay()\n          picOverlay.prototype.initialize = function(map){\n            let _ = this\n            this._map = map\n            let div = this._div = document.createElement('div');\n            div.style.position = 'absolute'\n            div.style.overflow = 'hidden'\n            div.style.fontSize = '12px'\n            div.style.width = '50px'\n            div.style.textAlign = 'center'\n            div.style.cursor = 'pointer'\n            div.className = 'OverlayUserMove'\n            div.style.zIndex = BMap.Overlay.getZIndex(this._point.lat);\n            let p = this._p = document.createElement('p')\n            let img = this._img = document.createElement('img')\n            p.appendChild(document.createTextNode(this.data.nickName))\n            img.setAttribute('src',this.data.headPic)\n            //设置图片样式\n            img.style.width ='30px'\n            img.style.height ='30px'\n            img.style.border = '2px solid #005ced'\n            img.style.boxShadow = '0px 0px 8px #005ced'\n            img.style.borderRadius = '50px'\n            div.appendChild(img)\n            div.appendChild(p)\n            _this.map2.getPanes().labelPane.appendChild(div);\n              return div\n            }\n            picOverlay.prototype.draw = function(){\n              let map = this._map;\n              let _ = this\n              let pixel\n              setInterval(()=>{\n                pixel = map.pointToOverlayPixel(_._point)\n              _._div.style.left = pixel.x + \"px\";\n              _._div.style.top  = pixel.y - 30 + \"px\";\n              },10)\n            }\n            let location =  {lng:gps.gps.lng,lat:gps.gps.lat}\n            let myOverlay = new picOverlay(location,gps)\n            _this.map2.addOverlay(myOverlay)\n    },\n    removeOverlay(){ //删除覆盖物\n\n          let OverlayUserMove = document.querySelectorAll('div.OverlayUserMove')\n            for ( let it of OverlayUserMove){\n                it.remove(it)\n          }\n    },\n    getPushListOrder(data){ //推送服务单列表\n      let _this = this\n      this.$store.dispatch(types.LIST_PUSH_ORDER,data)\n      .then(res=>{\n          if(res.status==\"error\"){\n            _this.endOrderList = []\n          }else{\n            _this.userPointLocationOrderInfo = res\n            _this.updataMapOverview(_this.userPointLocationOrderInfo)\n            console.log(_this.userPointLocationOrderInfo)\n          }\n      }).catch(err=>{\n        console.log(err)\n      })\n    },\n    getEndOrderList(data){ //已结束服务单列表\n      console.log(123)\n      let _this = this\n      this.$store.dispatch(types.LIST_ORDER,data)\n      .then(res=>{\n          if(res.status==\"error\"){\n            _this.endOrderList = []\n          }else{\n            _this.endOrderList = res\n          }\n      }).catch(err=>{\n        console.log(err)\n      })\n    },\n    //消息列表滚动条事件\n    handleScroll(){\n      let scroll = document.getElementById('socketMessageList')\n      let height = document.getElementById('socketMessageListUl').offsetHeight\n      scroll.scrollTop = scroll.scrollHeight\n    },\n    //获取服务单列表\n    getListOrder(data){\n\n      let _this = this\n      this.$store.dispatch(types.LIST_ORDER,data)\n      .then(res=>{\n            //获取还未被抢单的列表\n            if(data.status==\"0\"){\n              console.log(res)\n              _this.userPointLocationOrderInfo = res\n            //获取已经被抢单的列表\n            }else if(data.status==\"1\"){\n              console.log(res)\n              if(res.status==\"error\"){\n                _this.innerLeftList = []\n              }else{\n                //增加 遮罩层 增加未读提示消息\n                _this.innerLeftList= []\n                for (let it of res ){\n                  it.leftListCover = false\n                  it.tip = 0\n                  _this.innerLeftList.push(it)\n                }\n                _this.currentServiceNum = _this.innerLeftList.length\n              }\n            }\n      }).catch(err=>{\n        console.log(err)\n      })\n    },\n    //客服加入频道\n    joinChannel(info){\n      this.$store.dispatch(types.JOIN_CHANNEL,info).then(res=>{\n        console.log('joinChannel')\n        console.log(res)\n      }).catch(err=>{\n        console.log(err)\n      })\n    },\n    //获取右侧消息详情\n    getMessageInfo(item,index,option){\n      // console.log\n      let _that = this\n      this.removeOverlay()\n      _that.containerVisible = false\n      this.containerVisible2 = true\n      this.currentServiceInfo = item\n      _that.chatMessageList = []\n      this.currentServiceInfo.option = option\n      //创建并且初始化聊天窗口\n      if(option=='start'){\n          this.index = index\n      }else if(option=='end'){\n        this.endindex = index\n      }\n      _that.innerRightOrderMember = []\n      this.innerRightVisible = true\n      let data = {\n        \"orderID\":item.orderID,\n        \"accountID\": item.accountID,// 登录用户id\n        \"isInit\":false\n      } \n      _that.$store.dispatch(types.INIT_ORDER,data)\n      .then(res=>{\n        _that.innerRightOrderMember = res\n        console.log(res)\n        _that.getUserLocation(res) //第一次执行\n        setTimeout(()=>{\n          _that.map2.centerAndZoom(new BMap.Point(_that.currentGps.lng, _that.currentGps.lat),15);\n        },1000)\n        setInterval(()=>{\n          _that.removeOverlay()\n          _that.getUserLocation(res) //20秒一次绘图人物定位\n        },30000)\n      }).catch(err=>{\n        console.log(err)\n      })\n      _that.page = 1\n      // _that.chatMessageList = [] //消息列表\n      _that.getChatLog(item.channelID)\n        setTimeout(()=>{\n         _that.handleScroll() //滚动条\n        },500)\n      console.log(item)\n      //创建频道在线内用户列表\n      //地图上创建标注 创建轨迹 \n    },\n    //调用myGPS接口\n    getUserLocation(list){\n      let _ = this\n      let memberList = list\n      console.log(list)\n        for(let it of memberList){\n          if(it.accountID==_.accountID){\n            continue\n          }\n            Api.getUserLocation({accountID:it.accountID}).then(res=>{\n              if(res.status!=='error'){\n                  it.gps = res\n                  _.createPushMapUser(it)\n              }\n              if(it.userType=='1'){\n                _.currentGps = res \n              }\n            }).catch(err=>{\n              console.log(err)\n            })\n        }\n\n    },\n    getChatLog(channelID){ //获取聊天记录\n\n      this.loading = true\n      let _this = this\n      let data = {\n        channelID:channelID,\n        page:_this.page,\n        \"step\": \"20\",\n        \"isUp\":'up'\n      }\n      console.log(_this.page)\n      \n      Api.getChatList(data)\n      .then(res=>{\n        console.log(res)\n        _this.count = res.count\n        _this.zcount = res.zcount\n        _this.page =  _this.page+1 \n        if(res.list<1){\n          _this.loading = false\n          _this.noMore = true\n          return\n        }\n          // let list = JSON.parse(res.list)\n          for (let it of res.list) {\n            //push 指定的文本\n              _this.chatMessageList.unshift(it)\n              \n              if(it.msgType==\"groupMap\"){\n                it.msgObj.map = JSON.parse(it.msgObj.map)\n                console.log(it)\n                setTimeout(() => {\n                  let map = new BMap.Map('groupMap'+it.msgTime);    //\n\n                  let point = new BMap.Point(it.msgObj.map.lng, it.msgObj.map.lat);\n                  console.log(point)\n                  map.centerAndZoom(point, 19);\n                  let marker = new BMap.Marker(point)\n                  map.addOverlay(marker)\n                }, 1)\n              }\n              _this.loading = false\n          }\n          \n          _this.chatMessageList = [...new Set(_this.chatMessageList)]\n            _this.loading = false\n        }).catch(err=>{\n          console.log(err)\n        })\n    },\n    loadingScroll(){\n      let _this = this\n      let scroll = document.getElementById('socketMessageList')\n      let height = document.getElementById('socketMessageListUl').offsetHeight\n      if(scroll.scrollTop == 0){\n        console.log('show')\n        _this.getChatLog(_this.currentServiceInfo.channelID)\n        \n      }\n    },\n    //历史消息图文 录音 处理\n    sendImg() {\n      let uploadInput = document.getElementById('uploadInput').files[0]\n      let fr = new FileReader()\n      let base64 \n      let _this = this\n      if(uploadInput.size.toFixed(1)>2*1024*1024){\n        _this.openError(\"文件不能大于2M\")\n        return\n      }\n      fr.readAsDataURL(uploadInput);\n      fr.onload = function(){\n        base64 = fr.result\n        // utils.compressPictures(base64)\n        Api.uploadOssImg({base64:base64}).then(res=>{\n            _this.sendMessageInfo(res,'groupPic')\n            console.log(res)\n          }).catch(err=>{\n            _this.openError('上传失败')\n          })\n      }\n    },\n    \n    Recording(operating){ //开始录音\n      let _this = this\n      let rec =  Recorder ()\n      console.log(rec)\n      rec.open(function(){//打开麦克风授权获得相关资源\n      rec.start ();\n       _this.$confirm('正在录音，点击录音完成发送给用户', '温馨提示', {\n          confirmButtonText: '录音完成',\n          cancelButtonText: '取消录音',\n          type: 'success'\n        }).then(() => {\n          _this.$message({\n            type: 'success',\n            message: '录音发送成功!'\n          });\n          rec.stop(function(blob,duration){//到达指定条件停止录音，拿到blob对象\n            rec.close ();//释放录音资源\n              const voice = new FileReader()\n              voice.readAsDataURL(blob)\n              voice.onload = function(e){\n                //保存数据 上传并发送\n              let  base64 = e.target.result\n                Api.uploadOssFile({base64:base64}).then(res=>{\n                  console.log(res)\n                  _this.sendMessageInfo(res,'groupVoice')\n                  console.log(res)\n                }).catch(err=>{\n                  _this.openError('上传失败')\n                })\n            }\n          })\n        }).catch(() => {\n          _this.$message({\n            type: 'info',\n            message: '录音发送失败'\n          });  \n          rec.stop(function(blob,duration){\n            rec.close();//释放录音资源\n          })        \n        });\n    })\n    },\n    //保存聊天记录\n    saveChatLog (user_info,msg,type) {\n      const msgInfo = {\n        from_id: user_info.id,\n        from_name: user_info.name,\n        from_avatar: user_info.avatar,\n        to_name: uinfo.username,\n        to_id: accountID,\n        msgType: type,\n        content: msg,\n        group_id: user_info.groupID\n      };\n      // this.$store.dispatch(types.ADD_CHAT_LOG,)\n    },\n    sendLocation(){\n      this.sendMessageInfo(JSON.stringify(this.searchLocation) ,'groupMap')\n      this.handleScroll()\n    },\n    sendMessageInfo(msg,group){ //向服务器发送消息\n          //数据发送\n          if(this.currentServiceInfo.option == 'end'){\n            this.$message.error('当前服务单已经结束');\n            return\n          }\n          if(group == 'groupText'){\n            if(msg.trim()==''){\n              this.$message.error('消息不能为空');\n              return\n            }\n          }\n          let _this = this\n          let info = {\n            \"userInfo\":{\n              \"accountID\": _this.userInfo.accountID, \n              \"nickName\": _this.userInfo.nickName, \n              \"headPic\": _this.userInfo.headPic,\n              \"lng\": \"116.358\",\n              \"lat\": \"40.050\",\n              \"userType\": 2\n            },\n            \"content\":msg,\n            \"msgType\": group, \n            \"channelID\": _this.currentServiceInfo.channelID, \n            \"orderID\": _this.currentServiceInfo.orderID\n          }\n          setTimeout(()=>{\n            _this.$store.dispatch(types.ADD_CHAT_LOG,info).then(res=>{\n              _this.socketMessageText = \"\"\n            }).catch(err=>{\n              console.log(err)\n              _this.openError('发送失败')\n            })\n\n          },30)\n          setTimeout(()=>{\n            _this.handleScroll()\n          },0)\n    },\n    EndOrderStart(){  //结束工单开始\n        this.dialogVisibleEndOrder=true\n        // this.inputEndOrderAdress:\"上海市-普陀区-镇坪路389号\",\n        // this.textareaEndOrderDesc:\"请描述用户所咨询的问题\",\n        console.log(this.currentServiceInfo)\n        this.startTime =utils.formatData(new Date((this.currentServiceInfo.start_time*1000)))\n        this.endTime=utils.formatData(new Date()) //咨询结束时间\n        this.calcDuration(this.currentServiceInfo.start_time)\n    },\n    calcDuration(t){ //计算时间\n          let timeStamps = Date.parse(new Date())/1000\n          let diff = timeStamps-t\n          let h = Math.floor(diff/3600) + '小时'\n          diff = diff % 3600\n          let m = Math.floor(diff/60)+'分钟'\n          diff = diff % 60\n          let s = diff +'秒'\n          this.duration = h+m+s\n    },\n    EndOrder(){ //结束工单\n        \n         let info = this.userInfo\n         let _this = this\n         let data = {\n           \"userInfo\":info,\n            \"channelID\": this.currentServiceInfo.channelID,\n            \"desc\": this.textareaEndOrderDesc,\n            \"address\": this.inputEndOrderAdress,\n            \"endTime\": this.endTime\n         }\n         console.log(data)\n         console.log(_this.innerLeftList)\n        this.$store.dispatch(types.OUT_KF_CHANNEL,data).then(res=>{\n          this.openSuccess('结单成功')\n          _this.innerLeftList =  _this.innerLeftList.filter((val)=>{\n             return val.channelID != data.channelID\n          })\n          _this.endOrderList.push(this.currentServiceInfo)\n          _this.currentServiceNum = _this.innerLeftList.length\n        }).catch(err=>{\n          console.log(err)\n          this.openError('结单失败')\n        })\n        _this.currentServiceNum = _this.innerLeftList.length\n        this.dialogVisibleEndOrder=false\n        this.innerRightVisible = false\n        this.removeOverlay()\n    },\n    //错误提示\n    openError(err) {\n        this.$message.error(err);\n    },\n    //成功提示\n    openSuccess(success) {\n        this.$message({\n          message:success,\n          type:'success'\n        })\n    },\n  //聊天样式绑定 自己的和他人的\n    messageStyle(accountID){\n      return accountID== this.accountID ? 'message-item-self' : 'message-item'\n    },\n      toCall() {\n        this.callShow = true\n        for (let item of this.callUserList) {\n          this.$set(item, 'check', false)\n        }\n        // this.callUserList = this.innerRightOrderMember\n      },\n      // 踢人\n      kickoutUser () {\n          this.$confirm('确认将' + this.clickItemUser.nick_name + '踢出回话房间？', '提示', {\n              confirmButtonText: '确定',\n              cancelButtonText: '取消',\n              type: 'warning',\n              center: true\n          }).then(() => {\n              this.roomAdminShow = false\n              this.myRoom.kickoutUser(this.clickItemUser.accountID)\n          }).catch(() => {\n          })\n      },\n      // 开始呼叫\n      startCall () {\n          if (this.clickItemUserList.length === 0) {\n              this.$message({\n                  showClose: true,\n                  message: '请选择呼叫人员',\n                  type: 'error'\n              })\n          } else if (this.clickItemUserList.length > 8) {\n              this.$message({\n                  showClose: true,\n                  message: '最多只能呼叫8个人',\n                  type: 'error'\n              })\n          } else {\n              this.infoShow = true\n          }\n      },\n      // 取消全部\n      allNoCheck () {\n          for (let item of this.callUserList) {\n              this.$set(item, 'check', false)\n          }\n          this.clickItemUserList = []\n      },\n      // 选中\n      ischeck (item) {\n          this.$set(item, 'check', !item.check)\n          if (item.check) {\n              this.clickItemUserList.push(item)\n          } else {\n              for (let i = this.clickItemUserList.length - 1; i >= 0; i--) {\n                  if (this.clickItemUserList[i].userId === item.userId) {\n                      this.clickItemUserList.splice(i, 1)\n                  }\n              }\n          }\n      },\n      // 静音\n      toMetud (boon) {\n          this.metud = boon\n          // 批量订阅tracks，并在页面上播放\n          // 订阅房间中已经存在的 tracks\n          if (this.metud) {\n              const localTracks = QNRTC.deviceManager.getLocalTracks({\n                  audio: {enabled: true, tag: 'audio', muted: true}\n              })\n              this.myRoom.publish(localTracks)\n          } else {\n              const localTracks = QNRTC.deviceManager.getLocalTracks({\n                  audio: {enabled: true, tag: 'audio', muted: false}\n              })\n              this.myRoom.publish(localTracks)\n          }\n      },\n      toShowUserList (i) {\n          console.log(i)\n          $('.userListDialog').animate({\n              right: '0'\n          }, 100)\n          if (i === 0) {\n              // 获取当前在线列表\n              this.$store.commit('updateActiveIndexTab', 0)\n              if (this.myInfo.role === 1) {\n                  this.$store.dispatch('POP_POST_GETCUSTOMERUSERLIST', {accountID: this.myInfo.accountID, status: '1'}).then((res) => {\n                      console.log(res, '客户')\n                      this.$store.commit('updateUserActiveList', res)\n                  })\n              } else {\n                  this.$store.dispatch('POP_POST_GETNEARUSERLIST', {cityCode: this.myInfo.cityCode}).then((res) => {\n                      console.log(res, '在线')\n                      this.$store.commit('updateUserActiveList', res)\n                  })\n              }\n          } else if (i === 1) {\n              // // 活跃\n              // this.$store.dispatch('POP_POST_GETACTIVEUSERLIST', {accountID: this.myInfo.accountID}).then((res) => {\n              //   console.log(res, '活跃')\n              //   this.$store.commit('updateActiveIndexTab', 1)\n              //   this.$store.commit('updateUserActiveList', res)\n              // })\n          } else {\n              // 客户\n              this.$store.commit('updateActiveIndexTab', 2)\n              this.$store.dispatch('POP_POST_GETCUSTOMERUSERLIST', {accountID: this.myInfo.accountID}).then((res) => {\n                  console.log(res, '客户')\n                  this.$store.commit('updateUserActiveList', res)\n              })\n          }\n      },\n      // 选择呼叫人员\n      toAdminRoom (item) {\n          console.log(item)\n          // this.$store.commit('updateClickItem', item)\n          this.clickItemUser = {\n              accountID: item.accountID,\n              user_header: item.user_header,\n              nick_name: item.nick_name\n          }\n          this.roomAdminShow = true\n      },\n      // 挂断并退出房间\n      leaveRoom () {\n          document.getElementById('callout').pause()\n          document.getElementById('off').play()\n          this.roomName = ''\n          this.callList = []\n          this.clickItemUserList = []\n          this.againVit = false\n          this.onlineCallShow = false\n          this.myRoom.leaveRoom()\n          this.callUserList = []\n          clearTimeout(this.timeout)\n      },\n      call () {\n          this.$store.commit('updateAgainVit', false)\n          this.againVit = true\n          let obj = {\n              accountID: this.clickItem.accountID,\n              user_header: this.clickItem.headPic,\n              nick_name: this.clickItem.nickName,\n              lat: this.clickItem.lat,\n              lng: this.clickItem.lng,\n              online: false\n          }\n          this.clickItemUserList.push(obj)\n          this.infoShow = true\n      },\n      // 关闭选择呼叫人员弹出\n      hiddenDialog () {\n          this.clickItemUserList = []\n          this.callShow = false\n          this.callUserList = []\n      },\n      // 添加呼叫人员\n      addCallUser () {\n        this.againVit = true\n        this.callShow = true\n        this.callUserList= this.mapUserList\n      },\n      // 创建房间进行通话\n      createRoom () {\n          this.myRoom = new QNRTC.TrackModeSession()\n          if (!QNRTC.version) {\n              this.$alert('您的浏览器不支持语音通话，请切换谷歌浏览器使用', '温馨提示', {\n                  confirmButtonText: '确定'\n              })\n              this.roomName = ''\n              this.myRoom = ''\n              return false\n          }\n          console.log('current version is', QNRTC.version)\n          // 加入房间\n          this.onlineCallShow = true\n          this.callShow = false\n          this.infoShow = false\n          document.getElementById('callout').play()\n          // 通话中再邀请\n          if (this.roomName) {\n              // this.$set(this.myInfo, 'online', true)\n              // this.callList.push(this.myInfo)\n              console.log(this.myInfo, 9999999)\n              let ary = []\n              for (let item of this.clickItemUserList) {\n                  let a = 0\n                  for (let i of this.callList) {\n                      if (i.accountID === item.accountID) {\n                          a = 1\n                      }\n                  }\n                  if (a === 0) {\n                      ary.push(item.accountID)\n                      // 获取房间暂未加入人员基本信息\n                      console.log(item, 102155555555555555555555555555555)\n                      this.$set(item, 'online', false)\n                      this.$set(item, 'user_name', item.nick_name)\n                      this.callList.push(item)\n                      this.timeout = setTimeout(() => {\n                          console.log(item)\n                          if (!item.online) {\n                              this.$message({\n                                  message: item.user_name + '未接听通话',\n                                  type: 'warning'\n                              })\n                              this.callList.forEach((item1, index) => {\n                                  console.log(item1, index)\n                                  if (item1.accountID === item.accountID) {\n                                      this.callList.splice(index, 1)\n                                      if (this.callList.length === 1) {\n                                          setTimeout(() => {\n                                              this.$message({\n                                                  message: '即将结束通话',\n                                                  type: 'warning'\n                                              })\n                                          }, 1000)\n                                          setTimeout(() => {\n                                              this.roomName = ''\n                                              this.onlineCallShow = false\n                                              document.getElementById('callout').pause()\n                                              document.getElementById('off').play()\n                                              this.myRoom.leaveRoom()\n                                          }, 3000)\n                                      }\n                                  }\n                              })\n                          }\n                      }, 60000)\n                  } else {\n                      this.$message({\n                          showClose: true,\n                          message: item.nick_name + '正在通话中',\n                          type: 'error'\n                      })\n                  }\n              }\n              let re = {\n                  fromUser: this.myInfo.accountID,\n                  toUser: ary.join(','),\n                  msgType: 'qnNotice',\n                  msgTime: new Date().getTime(),\n                  msgObj: {\n                      appId: 'e6tc2sxx0',\n                      roomName: this.roomName,\n                      reason: this.textarea,\n                      st: 0 // 0-发起 1-确认ok 2- 拒绝/系统30s自动挂断\n                  }\n              }\n              // 发送语音通话请求\n              this.$store.dispatch('POP_POST_SENDTALKMSG', re).then(reo => {\n                  let req = {\n                      appId: 'e6tc2sxx0',\n                      accountID: this.myInfo.accountID,\n                      roomName: this.roomName,\n                      permission: 'admin',\n                      expireAt: '3600'\n                  }\n                  // 获取房间token\n                  this.$store.dispatch('POP_POST_APPTOKEN', req).then((res) => {\n                      this.clickItemUserList = []\n                      this.callUserList = []\n                      joinRoom(res.data, this.roomName)\n                  })\n                  // if (reo.msgID) {\n                  //\n                  // } else {\n                  //   this.$message({\n                  //     showClose: true,\n                  //     message: '对方不在线',\n                  //     type: 'error'\n                  //   })\n                  // }\n              })\n          } else {\n              // 新建通话\n              this.callList = []\n              this.$set(this.myInfo, 'online', true)\n              this.callList.push(this.myInfo)\n              let arr = []\n              for (let item of this.clickItemUserList) {\n                  let a = 0\n                  for (let i of this.callList) {\n                      if (i.accountID === item.accountID) {\n                          a = 1\n                      }\n                  }\n                  if (a === 0) {\n                      arr.push(item.accountID)\n                      // 获取房间暂未加入人员基本信息\n                      console.log(item, 102155555555555555555555555555555)\n                      this.$set(item, 'online', false)\n                      this.$set(item, 'user_name', item.nick_name)\n                      this.callList.push(item)\n                      this.timeout = setTimeout(() => {\n                          console.log(item)\n                          if (!item.online) {\n                              this.$message({\n                                  message: item.user_name + '未接听通话',\n                                  type: 'warning'\n                              })\n                              this.callList.forEach((item1, index) => {\n                                  console.log(item1, index)\n                                  if (item1.accountID === item.accountID) {\n                                      this.callList.splice(index, 1)\n                                      if (this.callList.length === 1) {\n                                          setTimeout(() => {\n                                              this.$message({\n                                                  message: '即将结束通话',\n                                                  type: 'warning'\n                                              })\n                                          }, 1000)\n                                          setTimeout(() => {\n                                              this.roomName = ''\n                                              this.onlineCallShow = false\n                                              document.getElementById('callout').pause()\n                                              document.getElementById('off').play()\n                                              this.myRoom.leaveRoom()\n                                          }, 3000)\n                                      }\n                                  }\n                              })\n                          }\n                      }, 60000)\n                  }\n              }\n              this.$store.dispatch('POP_POST_INITROOM', {appId: 'e6tc2sxx0', accountID: this.myInfo.accountID}).then((rea) => {\n                  console.log(rea)\n                  this.roomName = rea.roomName\n                  let ary = []\n                  for (let item of this.clickItemUserList) {\n                      ary.push(item.accountID)\n                  }\n                  let re = {\n                      fromUser: this.myInfo.accountID,\n                      toUser: ary.join(','),\n                      msgType: 'qnNotice',\n                      msgTime: new Date().getTime(),\n                      msgObj: {\n                          appId: 'e6tc2sxx0',\n                          roomName: rea.roomName,\n                          reason: this.textarea,\n                          st: 0 // 0-发起 1-确认ok 2- 拒绝/系统30s自动挂断\n                      }\n                  }\n                  console.log(re, 'sendtalkmsg111111111111')\n                  // 发送语音通话请求\n                  this.$store.dispatch('POP_POST_SENDTALKMSG', re).then(reo => {\n                      console.log(rea, 'sendtalkmsg22222222222')\n                      let req = {\n                          appId: 'e6tc2sxx0',\n                          accountID: this.myInfo.accountID,\n                          roomName: rea.roomName,\n                          permission: 'admin',\n                          expireAt: '3600'\n                      }\n                      // 获取房间token\n                      this.$store.dispatch('POP_POST_APPTOKEN', req).then((res) => {\n                          this.clickItemUserList = []\n                          this.callUserList = []\n                          joinRoom(res.data, rea.roomName)\n                      })\n                  })\n              })\n          }\n          let _this = this\n          let ado = document.getElementById('ado')\n          async function joinRoom (roomToken, roomName) {\n              try {\n                  // 加入房间\n                  await _this.myRoom.joinRoomWithToken(roomToken)\n                  _this.$store.dispatch('POP_POST_INITROOM', {appId: 'e6tc2sxx0', accountID: _this.myInfo.accountID}).then((reb) => {\n                      // 获取房间所有人信息\n                      _this.$store.dispatch('POP_POST_LISTUSER', {appId: 'e6tc2sxx0', roomName: roomName}).then((res) => {\n                          console.log(res, 5555555656568566)\n                          if ((JSON.parse(res.data.body).users).length > 0) {\n                              for (let item of JSON.parse(res.data.body).users) {\n                                  let a = 0\n                                  for (let i of _this.callList) {\n                                      if (i.accountID === item.userId) {\n                                          a = 1\n                                      }\n                                  }\n                                  if (a === 0) {\n                                      // 获取房间暂未加入人员基本信息\n                                      _this.$store.dispatch('POP_POST_GETMYSELFINFO', {accountID: item.userId}).then((rep) => {\n                                          // 加入房间\n                                          _this.$set(rep, 'online', true)\n                                          _this.callList.push(rep)\n                                      })\n                                  }\n                              }\n                          }\n                      })\n                  })\n                  // 订阅房间中已经存在的 tracks\n                  subscribeTracks(_this.myRoom.trackInfoList)\n              } catch (e) {\n                  console.error(e)\n                  this.roomName = ''\n                  document.getElementById('callout').pause()\n                  document.getElementById('off').play()\n                  this.myRoom.leaveRoom()\n                  alert(`加入房间失败！ErrorCode: ${e.code || ''}`)\n                  return\n              }\n              // user-join 房间有除自己以外的新用户加入\n              _this.myRoom.on('user-join', user => {\n                  document.getElementById('callout').pause()\n                  for (let i of _this.callList) {\n                      if (i.accountID === user.userId) {\n                          _this.$set(i, 'online', true)\n                      }\n                  }\n              })\n              // track-add 房间中有其他用户发布了 Track\n              _this.myRoom.on('track-add', tracks => {\n                  console.log('new tracks', tracks, 222222222222222222222)\n              })\n              // 监听房间中其他人发布的 Track，自动订阅它们\n              _this.myRoom.on('track-add', (tracks) => {\n                  subscribeTracks(tracks)\n              })\n              _this.myRoom.on('user-leave', user => {\n                  console.log('user leave!', user, 9556565656566)\n                  _this.callList.forEach((item, index) => {\n                      console.log(item, index)\n                      if (item.accountID === user.userId) {\n                          _this.callList.splice(index, 1)\n                          if (_this.callList.length === 1) {\n                              _this.$message({\n                                  message: item.user_name + '已中断通话',\n                                  type: 'warning'\n                              })\n                              setTimeout(() => {\n                                  _this.$message({\n                                      message: '即将结束通话',\n                                      type: 'warning'\n                                  })\n                              }, 1000)\n                              setTimeout(() => {\n                                  _this.roomName = ''\n                                  _this.onlineCallShow = false\n                                  document.getElementById('callout').pause()\n                                  document.getElementById('off').play()\n                                  _this.myRoom.leaveRoom()\n                              }, 3000)\n                          }\n                      }\n                  })\n              })\n              // 自动发布\n              await publish()\n          }\n          async function publish () {\n              console.log(QNRTC.deviceManager, 99999)\n              // 这个函数会返回一个列表，列表中每一项就是一个音视频轨对象\n              const localTracks = await QNRTC.deviceManager.getLocalTracks({\n                  audio: {enabled: true, tag: 'audio'}\n              })\n              console.log('my local tracks', localTracks)\n              // 将刚刚的 Track 列表发布到房间中\n              await _this.myRoom.publish(localTracks)\n              console.log('publish success!')\n              // for (const track of localTracks) {\n              //   track.play(ado)\n              // }\n          }\n          function subscribeTracks (trackInfoList) {\n              // 批量订阅 tracks，并在页面上播放\n              _this.myRoom.subscribe(trackInfoList.map(t => t.trackId)).then(tracks => {\n                  for (const track of tracks) {\n                      track.play(ado)\n                  }\n              })\n          }\n      },\n      // 确认呼叫\n      sureCall () {\n          if (this.roomName && !this.againVit) {\n              this.$confirm('您正在通话中，是否挂掉当前通话，建立新的通话？', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n              }).then(() => {\n                  this.$store.commit('updateOnlineCallShow', false)\n                  this.roomName = ''\n                  document.getElementById('callout').pause()\n                  document.getElementById('off').play()\n                  this.myRoom.leaveRoom()\n                  this.callList = []\n                  this.createRoom()\n              }).catch(() => {\n                  return false\n              })\n          } else {\n              this.createRoom()\n          }\n      },\n  },\n  filters:{\n    timeFormat:function(v){\n       let time = Date.parse(new Date())\n      let diff = (time/1000)-v\n      let t = new Date(v*1000) //86400 504780\n      if(diff<300&&diff>60){\n       return parseInt(diff/60)+'分钟前'\n      }else{\n        return  t.toLocaleString()\n      }\n    },\n    diff:function(v){\n      let timeStamps = Date.parse(new Date())/1000\n      let diff = timeStamps-v\n       (Math.floor((diff/60/60)*100)/100).toString().split('.')[0]+'小时'+(Math.floor((diff/60/60)*100)/100).toString().split('.')[1]+'分钟'\n    }\n  },\n  computed:{\n      disabled () {\n        return this.loading || this.noMore\n      }\n  },\n  watch:{\n    currentServiceNum:function(v){\n      this.currentService=\"当前服务(\"+v+\")\"\n    },\n    innerLeftList:function(v){\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"less\" scoped>\n.ClockTime{\n    background-color: white;\n    display: inline-block;\n    padding: 4px;\n    border-radius: 10px;\n    img{\n      height: 20px;\n      vertical-align: middle;\n    }\n}\n.icon-selected{\n  color:#4acdc8\n}\n.loadingStyle{\n    margin: 15px;\n    color: #aaaaaa;\n    text-align: center;\n}\n.systemMessage{\n    text-align: center;\n    margin: 25px 15px;\n    font-size: 14px;\n    color: #aaaaaa;\n}\n.userMessage{\n   text-align: center;\n    margin: 25px 15px;\n    font-size: 14px;\n    color: #aaaaaa;\n}\n.uploadInput{\n          position: absolute;\n          width: 50px;\n          height: 40px;\n          opacity: 0;\n    }\n.locationSign{\n  display: inline-block;\n  height: 40px;\n  font-size: 14px;\n  position: absolute;\n  top: 100px;\n  left: 280px;\n  color: white;\n  background-color: rgba(0,0,0,.4);\n  line-height: 40px;\n  border-radius: 8px;\n  padding: 0 10px;\n  z-index: 1;\n}\n.SwitchPage{\n  display: inline-block;\n  height: 40px;\n  font-size: 14px;\n  position: absolute;\n  top: 100px;\n  left: 580px;\n  color: white;\n  background-color: rgba(0,0,0,.4);\n  line-height: 40px;\n  border-radius: 8px;\n  padding: 0 10px;\n  cursor:pointer;\n  z-index: 1;\n}\n.seachLocation{\n  display: inline-block;\n  height: 40px;\n  font-size: 14px;\n  position: absolute;\n  top: 100px;\n  left: 380px;\n  color: white;\n  background-color: rgba(0,0,0,.4);\n  line-height: 40px;\n  border-radius: 8px;\n  padding: 0 10px;\n  z-index: 1;\n  input{\n    width: 150px;\n    background-color: rgba(0,0,0,0);\n    color: white;\n    border: none;\n    font-size: 14px;\n  }\n  input::placeholder{\n    color: white;\n  }\n  i{\n    font-weight: bold;\n  }\n  input:focus{\n    border: none\n  }\n}\n.wordbreak{\n    word-break: break-word;\n    max-width: 350px;\n}\n/deep/.el-message{\n      top: 100px !important;\n}\n/deep/.el-tabs__nav-wrap{\n    border: 1px solid #4acdc8;\n    border-radius: 5px;\n    margin: 5px;\n}\n/deep/ .el-tabs__content{\n    height: 600px;\n    overflow-y: auto;\n}\n/deep/ .el-tabs__nav{\n    width: 100%;\n    .el-tabs__item{\n      width: 51%;\n      text-align: center;\n      color:#4acdc8 !important;\n      background-color: white\n    }\n    .is-active{\n      background-color:#4acdc8 !important;\n      color: white !important\n    }\n}\n.dialogTransfer{\n    display: flex;\n    flex-wrap: wrap;\n    margin-bottom: 200px;\n    .select{\n     color: #4ed7d1;\n    }\n    i{\n      font-size: 20px;\n      position: absolute;\n      right: 10px;\n      top: 5px;\n    }\n  img{\n    margin-top: 30px;\n    padding: 10px;\n    width: 40px;\n    height: 40px;\n  }\n  div{\n    position: relative;\n    width:124px ;\n    height:140px ;\n    text-align: center;\n    margin: 10px 18px 0 0;\n    box-shadow: 0px 1px 6px gainsboro;\n  }\n}\n.endOrder-button{\n  cursor: pointer;\n  text-align: right;\n  button{\n        cursor: pointer;\n    width: 80px;\n    height: 30px;\n    border-radius: 5px;\n    border-width: 0;\n    margin-left: 12px;\n  }\n  button:nth-of-type(1){\n    background-color: #f1f3f8\n  }\n  button:nth-of-type(2){\n    background-color: #4ed7d1;\n    color: white\n  }\n}\n#socketMessageList{\n    .message-item-self{\n        margin: 5px 0px 20px 15px;\n        flex-direction: row-reverse;\n        display: flex;\n        .message-box-top{\n          margin-top: 5px;\n          display: flex;\n          flex-direction: row-reverse;\n        }\n\n        .card1{\n          background-color: #fafbff;\n          padding: 14px;\n          margin-top: 8px;\n          color: black;\n          font-size: 14px;\n          border-radius: 0px 8px 8px 8px;\n          border: 1px solid #dadadc;\n          img{\n              max-width: 200px;\n              max-height: 200px;\n          }\n        }\n\n    }\n\n    .groupMap{\n        width: 300px;\n        height: 200px;\n    }\n    .message-item{\n          margin: 5px 0px 20px 15px;\n          display: flex;\n          .card1-self{\n            border-radius: 8px 0px 8px 8px;\n            background-color: #4992f7;\n            padding: 14px;\n            margin-top: 8px;\n            color: white;\n            font-size: 14px;\n            img{\n              max-width: 200px;\n              max-height: 200px;\n          }\n        }\n    }\n    video{\n          height: 20px;\n          width: 100%;\n    }\n        .message-box-top{\n          span{\n            padding-right: 10px;\n            font-size: 12px;\n          }\n          .day{\n            color:#aaaaaa\n          }\n          .time{\n            color:#aaaaaa\n          }\n        }\n        .message-item-pic{\n            padding: 8px;\n            width: 40px;\n            height: 40px;\n            border-radius: 50px;\n        }\n\n}\n.flex{\n  display: flex;\n}\n.endOrder{\n   .bg{\n    background-color: rgba(0,0,0,.05);\n  }\n  .endOrder-time{\n  display: flex;\n  justify-content: space-between;\n  .time{\n    width: 150px;\n    padding: 5px;\n    margin: 5px 20px 14px 0;\n  }\n\n}\n.endOrder-desc{\n  .el-textarea{\n    margin: 12px 0;\n   /deep/ .el-textarea__inner{\n      background-color: rgba(0,0,0,.01);\n    }\n  }\n}\n.endOrder-adress{\n      position: relative;\n    input{\n    border-width: 0px;\n    width: 100%;\n    padding: 5px 0;\n    margin: 10px 0;\n    }\n    .text{\n       width: 100%;\n      padding: 5px 0;\n      margin: 10px 0;\n    }\n    i{\n      position: absolute;\n      right: 0;\n      top: 26px;\n      font-size: 20px;\n    }\n}\n}\n#container{\n    width: 100%;\n    height: 100%;\n    position: absolute;\n  }\n  #container2{\n    width: 100%;\n    height: 100%;\n    position: absolute;\n  }\n.dialogVisibleOff{\n  text-align: center;\n  .icon-guanbi{\n    font-size: 50px;\n    color: #ff5f49;\n  }\n  .guanbi-p{\n    padding-top: 10px;\n    font-size: 18px;\n    color: #ff5f49;\n  }\n  .Off-button{\n        cursor: pointer;\n    width: 70%;\n    height: 45px;\n    border-radius: 5px;\n    background-color: #ff5f49;\n    color: white;\n    font-size: 16px;\n    margin: 6px;\n  }\n  .dialog-p{\n    font-size: 16px;\n  }\n}\n.el-popover{\n        width: 526px;\n  .CommonWord{\n    width: 400px;\n    .CommonTitle{\n      font-weight: bold;\n    text-align: center;\n    padding: 5px;\n    border-bottom: 1px solid #eeeeee;\n    }\n    div{\n          display: inline-block;\n    }\n    .content{\n              padding: 10px;\n              width: 83%;\n    }\n    .send{\n          cursor: pointer;\n        width: 10%;\n        height: 100%;\n        background-color: #4ed7d1;\n        color: white;\n        border-radius: 5px;\n        text-align: center;\n        padding: 5px 2px;\n    }\n\n  }\n}\n\n.nav-bar{\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    position: fixed;\n    background: white;\n    z-index: 2;\n    box-shadow: 0px 1px 6px rgb(124, 106, 106);\n    .nav-left{\n          display: flex;\n          padding-left: 15px;\n          h3{\n            margin-top: 15px;\n            font-size:24px\n          }\n          img{\n              width: 70px;\n              height: 70px;\n          }\n    }\n    .nav-right{\n          margin-top: 5px;\n          display: flex;\n          img{\n              width: 60px;\n              height: 60px;\n              margin-right: 5px;\n              border-radius: 50px;\n          }\n          p{\n                margin-top: 15px;\n          }\n          button{\n               cursor: pointer;\n                margin: 10px;\n                width: 104px;\n                height: 38px;\n                border-radius: 8px;\n                background-color: #4ed7d1;\n                color: white;\n                font-size: 14px;\n                font-weight: 900;\n          }\n    }\n}\n.inner{\n      background-color: gainsboro;\n  .inner-left{\n        position: fixed;\n        z-index: 1;\n        width: 260px;\n        padding-top: 100px;\n        background-color: white;\n        box-shadow: 0px 1px 6px gainsboro;\n        .inner-left-top{\n              padding-left: 12px;\n              display: flex;\n              justify-content: space-between;\n              padding-bottom: 15px;\n              padding-right: 10px;\n              span:nth-of-type(1){\n                color:#888888\n              }\n        }\n        .inner-left-li-list{\n              position: relative;\n              display: flex;\n              margin: 5px 10px;\n              padding: 10px 10px;\n              border-bottom: 1px solid #dddddd;\n              .leftListCover{\n                  position: absolute;\n                  width: 100%;\n                  height: 100%;\n                  left: 0;\n                  top: 0;\n                  text-align: center;\n                  line-height: 60px;\n                  background: rgb(0,0,0,.6);\n                  color: white\n              }\n              .tip{\n                    position: absolute;\n                    background-color: #fa474f;\n                    font-size: 10px;\n                    height: 15px;\n                    padding: 0 4px;\n                    line-height: 15px;\n                    border-radius: 50%;\n                    color: white;\n                    right: 10px;\n                    bottom: 35px;\n              }\n              div>p{\n                    padding-bottom: 6px;\n              }\n            div>span{\n                  opacity: .7;\n                  font-size: 13px;\n            }\n        }\n        img{\n            width: 40px;\n            height: 40px;\n            margin-right: 7px;\n            border-radius: 50px;\n\n        }\n  }\n  .inner-right{\n        width: 600px;\n        height: auto;\n        background-color: white;\n        border-radius: 8px;\n        position: fixed;\n        right: 0;\n        margin-top: 80px;\n        box-shadow: 0px 1px 6px gainsboro;\n        .inner-right-nav{\n          display: flex;\n          padding: 15px;\n          border-bottom: 2px solid gainsboro;\n          .inner-right-nav-span{\n                padding-top: 8px;\n                color: #888888;\n          }\n          .inner-right-nav-p{\n                cursor: pointer;\n                border-left: 1px solid gainsboro;\n                padding-left: 8px;\n                margin-left: 10px;\n                color: #fa474f;\n                height: 25px;\n                padding-top: 8px;\n          }\n          img{\n              margin-left: 5px;\n              border-radius: 50px;\n              width: 40px;\n              height: 40px;\n          }\n          .icon-jiahao{\n            font-size: 37px;\n            color: gainsboro;\n          }\n        }\n        .inner-right-content{\n              height: 500px;\n              overflow-y: auto;\n              background-color: white;\n        }\n        /deep/ .el-textarea__inner{\n                border: 1px solid white;\n        }\n        .inner-right-input{\n          border-top: 1px solid gainsboro;\n          padding: 10px;\n          .inner-right-input-buttom{\n            background-color: white;\n            padding-bottom: 5px;\n            display: flex;\n            justify-content: space-between;\n            .bottom-right{\n             display: flex;\n            }\n            .inner-right-input-buttom-left div{\n                  cursor: pointer;\n                  width: 90px;\n                  height: 30px;\n                  text-align: center;\n                  background-color: #f1f3f8;\n                  line-height: 30px;\n                  border-radius: 5px;\n                  margin-left: 10px;\n              }\n               .inner-right-input-buttom-right {\n                  i{\n                    color: gainsboro;\n                    font-size: 36px;\n                    margin-right: 15px;\n                  }\n\n               }\n               .button{\n                     cursor: pointer;\n                        width: 100px;\n                        height: 35px;\n                        background-color: #4ed7d1;\n                        color: white;\n                        border-radius: 8px;\n                        text-align: center;\n                        line-height: 35px;\n                  }\n            div{\n              display: inline-block;\n            }\n          }\n        }\n  }\n}\n.messageListStyle{\n    background: linear-gradient(to right,#52dfd9,#4acdc8);\n    color:white !important;\n    border-radius: 10px;\n\n}\n\n\n.callListDialog{\n    position: absolute;\n    z-index: 100;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, .2);\n    .userListBox{\n        width: 625px;\n        height: 450px;\n        margin:  -225px auto 0;\n        position: relative;\n        top: 50%;\n        background: #fff;\n        border-radius: 10px;\n        overflow: hidden;\n        .header{\n            height: 50px;\n            line-height: 50px;\n            box-shadow: 0 2px 10px #f1f1f1;\n            text-align: center;\n            font-size: 16px;\n            font-weight: 600;\n            position: relative;\n            i{\n                position: absolute;\n                right: 10px;\n                top: 12px;\n                font-size: 28px;\n                color: #aaa;\n                cursor: pointer;\n                animation: 2s linear;\n            }\n            i:hover{\n                transform: scale(1.2);\n                color: #000;\n            }\n        }\n        ul{\n            width: 100%;\n            height: 330px;\n            overflow-y: auto;\n            padding: 10px;\n            box-sizing: border-box;\n            li{\n                float: left;\n                margin: 10px 5.4px;\n                width: 90px;\n                height: 100px;\n                background: #fff;\n                text-align: center;\n                border-radius: 5px;\n                overflow: hidden;\n                position: relative;\n                cursor: pointer;\n                border: 1px solid #ccc;\n                box-sizing: border-box;\n                i{\n                    position: absolute;\n                    right: 2px;\n                    top:0;\n                    font-size: 20px;\n                }\n                .iconweigouxuan{\n                    color: #ccc;\n                }\n                .icongouxuan-xuanzhong-yuankuang{\n                    color: #418bff;\n                }\n                img{\n                    width: 45px;\n                    height: 45px;\n                    border-radius: 50px;\n                    margin-top: 20px;\n                }\n                span{\n                    display: block;\n                    font-size: 14px;\n                    margin-top: 3px;\n                }\n            }\n            li:hover{\n                box-shadow: 1px 1px 5px 2px #ccc;\n            }\n        }\n        .buttonBox{\n            text-align: center;\n            height: 60px;\n            line-height: 60px;\n            button{\n                margin: 0 20px;\n            }\n        }\n    }\n}\n.infoDialog{\n    z-index: 110;\n    .infoBox{\n        width: 325px;\n        height: 450px;\n        margin:  -225px auto 0;\n        position: relative;\n        top: 50%;\n        background: #fff;\n        border-radius: 10px;\n        overflow: hidden;\n        .info{\n            /*margin: 10px 5.4px;*/\n            margin: 50px auto 30px;\n            width: 90px;\n            height: 100px;\n            box-shadow: 1px 1px 5px 2px #ccc;\n            background: #fff;\n            text-align: center;\n            border-radius: 5px;\n            position: relative;\n            i{\n                position: absolute;\n                right: 5px;\n                top: 5px;\n                /*color: #5195ff;*/\n                width: 10px;\n                height: 10px;\n                border-radius: 10px;\n                background: #5195ff;\n                /*font-size: 30px;*/\n            }\n            img{\n                width: 45px;\n                height: 45px;\n                border-radius: 50px;\n                margin-top: 20px;\n            }\n            span{\n                display: block;\n                font-size: 14px;\n                margin-top: 3px;\n            }\n        }\n        ul{\n            width: 100%;\n            height: 240px;\n            overflow-y: auto;\n            padding: 10px;\n            box-sizing: border-box;\n            li{\n                float: left;\n                margin: 5px 3px;\n                width: 90px;\n                height: 100px;\n                background: #fff;\n                overflow: hidden;\n                text-align: center;\n                border-radius: 5px;\n                position: relative;\n                cursor: pointer;\n                border: 1px solid #ccc;\n                box-sizing: border-box;\n                i{\n                    position: absolute;\n                    right: 2px;\n                    top:0;\n                    font-size: 20px;\n                }\n                .iconweigouxuan{\n                    color: #ccc;\n                }\n                .icongouxuan-xuanzhong-yuankuang{\n                    color: #418bff;\n                }\n                img{\n                    width: 45px;\n                    height: 45px;\n                    border-radius: 50px;\n                    margin-top: 20px;\n                }\n                span{\n                    display: block;\n                    font-size: 14px;\n                    margin-top: 3px;\n                }\n            }\n            li:hover{\n                box-shadow: 1px 1px 5px 2px #ccc;\n            }\n        }\n        .textarea{\n            width: 300px;\n            padding-top: 10px;\n            margin: 0 auto;\n            font-size: 14px;\n            .el-button{\n                width: 100%;\n                margin: 20px 0 10px;\n            }\n            p{\n                width: 100%;\n                font-size: 14px;\n                text-align: center;\n                color: #4a8cf5;\n                cursor: pointer;\n                padding: 5px 0;\n            }\n            p:hover{\n                opacity: .8;\n            }\n        }\n        .calling{\n            width: 100%;\n            text-align: center;\n            div{\n                margin: 50px 0;\n                color: #418bff;\n                font-size: 16px;\n            }\n            span{\n                background: #ff554e;\n                width: 60px;\n                height: 60px;\n                line-height: 60px;\n                display: inline-block;\n                border-radius: 60px;\n                cursor: pointer;\n                i{\n                    font-size: 30px;\n                    color: #fff;\n                }\n            }\n        }\n    }\n}\n.roomDialog{\n    z-index: 110;\n    .infoBox{\n        width: 325px;\n        height: 300px;\n        margin:  -150px auto 0;\n        position: relative;\n        top: 50%;\n        background: #fff;\n        border-radius: 10px;\n        overflow: hidden;\n        .info{\n            /*margin: 10px 5.4px;*/\n            margin: 50px auto 30px;\n            width: 90px;\n            height: 100px;\n            box-shadow: 1px 1px 5px 2px #ccc;\n            background: #fff;\n            text-align: center;\n            border-radius: 5px;\n            position: relative;\n            i{\n                position: absolute;\n                right: 5px;\n                top: 5px;\n                /*color: #5195ff;*/\n                width: 10px;\n                height: 10px;\n                border-radius: 10px;\n                background: #5195ff;\n                /*font-size: 30px;*/\n            }\n            img{\n                width: 45px;\n                height: 45px;\n                border-radius: 50px;\n                margin-top: 20px;\n            }\n            span{\n                display: block;\n                font-size: 14px;\n                margin-top: 3px;\n            }\n        }\n        .textarea{\n            width: 300px;\n            padding-top: 10px;\n            margin: 0 auto;\n            font-size: 14px;\n            .el-button{\n                width: 100%;\n                margin: 20px 0 10px;\n            }\n            p{\n                width: 100%;\n                font-size: 14px;\n                text-align: center;\n                color: #4a8cf5;\n                cursor: pointer;\n                padding: 5px 0;\n            }\n            p:hover{\n                opacity: .8;\n            }\n        }\n        .calling{\n            width: 100%;\n            text-align: center;\n            div{\n                margin: 50px 0;\n                color: #418bff;\n                font-size: 16px;\n            }\n            span{\n                background: #ff554e;\n                width: 60px;\n                height: 60px;\n                line-height: 60px;\n                display: inline-block;\n                border-radius: 60px;\n                cursor: pointer;\n                i{\n                    font-size: 30px;\n                    color: #fff;\n                }\n            }\n        }\n    }\n}\n.onlineCallDialog{\n    position: absolute;\n    right: 15px;\n    top: 50%;\n    width: 308px;\n    height: 520px;\n    margin-top: -260px;\n    background: #fff;\n    z-index: 120;\n    border-radius: 8px;\n    overflow: hidden;\n    padding: 15px 20px;\n    box-sizing: border-box;\n    .bg{\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        -webkit-filter: blur(5px);\n        filter: blur(20px);\n        transform: scale(1.2);\n        z-index: -1;\n    }\n    .title{\n        width: 100%;\n        height: 40px;\n        line-height: 40px;\n        border-radius: 50px;\n        background: #838e95;\n        font-size: 14px;\n        color: #fff;\n        text-align: center;\n    }\n    ul{\n        padding: 10px 0;\n        box-sizing: border-box;\n        width: 100%;\n        max-height: 350px;\n        overflow-y: auto;\n        li{\n            width: 25%;\n            height: 80px;\n            float: left;\n            font-size: 12px;\n            color: #fff;\n            margin: 10px 0;\n            text-align: center;\n            position: relative;\n            cursor: pointer;\n            div{\n                position: absolute;\n                top: 0;\n                left: 4px;\n                background: rgba(0, 0, 0, .5);\n                width: 60px;\n                height: 60px;\n                border-radius: 60px;\n                line-height: 60px;\n                font-size: 24px;\n                color: #ccc;\n            }\n            img{\n                width: 60px;\n                height: 60px;\n                border-radius: 60px;\n                display: block;\n                margin: 0 auto;\n            }\n            span{\n                margin-top: 5px;\n                display: block;\n            }\n            .ccc{\n                color: #888;\n            }\n        }\n        .add{\n            color: #c6c9b5;\n            i{\n                font-size: 60px;\n                display: block;\n                margin: 0 auto;\n            }\n        }\n    }\n    .btn{\n        position: absolute;\n        bottom: 30px;\n        left: 0;\n        /*height: 100px;*/\n        line-height: 50px;\n        text-align: center;\n        /*font-size: 50px;*/\n        width: 100%;\n        span{\n            background: #ff554e;\n            width: 60px;\n            height: 60px;\n            line-height: 60px;\n            display: inline-block;\n            border-radius: 60px;\n            cursor: pointer;\n            i{\n                font-size: 30px;\n                color: #fff;\n            }\n        }\n        .el-icon-microphone{\n            position: absolute;\n            right: 60px;\n            top: 18px;\n            color: #fff;\n            font-size: 30px;\n        }\n        .el-icon-turn-off-microphone{\n            position: absolute;\n            right: 60px;\n            font-size: 30px;\n            top: 18px;\n            color: #6b7571;\n        }\n    }\n}\n</style>\n"]}]}