{"remainingRequest":"/Users/Jiama003/Desktop/dist/node_modules/babel-loader/lib/index.js!/Users/Jiama003/Desktop/dist/node_modules/eslint-loader/index.js??ref--13-0!/Users/Jiama003/Desktop/dist/src/store/modules/userInfo.js","dependencies":[{"path":"/Users/Jiama003/Desktop/dist/src/store/modules/userInfo.js","mtime":1559733313942},{"path":"/Users/Jiama003/Desktop/dist/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Jiama003/Desktop/dist/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Jiama003/Desktop/dist/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/Jiama003/Desktop/dist/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _actions;\n\nimport * as types from \"../mutation-types\";\nimport Api from '@/assets/js/api';\nvar state = {\n  accountID: 'hahahha',\n  headPic: '',\n  nickName: '',\n  sex: '',\n  cityCode: '' //计算 state的过滤属性\n\n};\nvar getters = {}; //修改 state 状态\n\nvar mutations = {}; //异步修改 state的状态\n\nvar timeStamp = Date.parse(new Date()) / 1000;\nvar actions = (_actions = {}, _defineProperty(_actions, types.GET_KF_INFO, function (state, accountID) {\n  return new Promise(function (resolve, reject) {\n    Api.getKfInfo({\n      \"accountID\": accountID\n    }).then(function (res) {\n      console.log('res');\n      resolve(res);\n    }).catch(function (err) {\n      console.log(err);\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, types.LIST_ORDER, function (state, data) {\n  return new Promise(function (resolve, reject) {\n    // 如果有发起人\n    if (data.accountID) {\n      Api.listOrder({\n        \"status\": data.status,\n        \"isKF\": '1',\n        \"accountID\": data.accountID\n      }).then(function (res) {\n        resolve(res);\n      }).catch(function (err) {\n        console.log(err);\n        reject(err);\n      });\n    } else {\n      //没有发起人\n      Api.listOrder({\n        \"status\": data.status,\n        \"isKF\": '1'\n      }).then(function (res) {\n        resolve(res);\n      }).catch(function (err) {\n        console.log(err);\n        reject(err);\n      });\n    }\n  });\n}), _defineProperty(_actions, types.LIST_PUSH_ORDER, function (state, data) {\n  return new Promise(function (resolve, reject) {\n    // 如果有发起人\n    Api.listPushOrder({\n      \"status\": '0',\n      \"accountID\": data.accountID\n    }).then(function (res) {\n      resolve(res);\n    }).catch(function (err) {\n      console.log(err);\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, types.UPDATE_ORDER, function (state, data) {\n  return new Promise(function (resolve, reject) {\n    Api.updateOrder({\n      \"orderID\": data.orderID,\n      \"kfID\": data.accountID\n    }).then(function (res) {\n      resolve(res);\n    }).catch(function (err) {\n      console.log(err);\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, types.END_ORDER, function (state, o_id) {\n  return new Promise(function (resolve, reject) {\n    Api.endOrder({\n      \"orderID\": o_id\n    }).then(function (res) {\n      resolve(res);\n    }).catch(function (err) {\n      console.log(err);\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, types.JOIN_CHANNEL, function (state, info) {\n  console.log('GET_USER_INFO===');\n  return new Promise(function (resolve, reject) {\n    Api.joinChannel({\n      \"userInfo\": {\n        \"accountID\": info.accountID,\n        \"nickName\": info.user_name,\n        \"headPic\": info.user_avatar,\n        \"lng\": info.lng,\n        \"lat\": info.lat,\n        \"userType\": info.userType //1 -用户 2 客服 3-合伙人 4 -互助\n\n      },\n      \"channelID\": info.channelID,\n      // 用户端发起不用传\n      \"orderID\": info.orderID\n    }).then(function (res) {\n      resolve(res);\n    }).catch(function (err) {\n      console.log(err);\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, types.INIT_ORDER, function (state, data) {\n  console.log('INIT_ORDER===');\n  console.log(data);\n  return new Promise(function (resolve, reject) {\n    Api.initOrder(data).then(function (res) {\n      resolve(res);\n    }).catch(function (err) {\n      console.log(err);\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, types.GET_CHAT_LOG, function (state, channelID) {\n  return new Promise(function (resolve, reject) {\n    Api.getChatLog({\n      \"channelID\": channelID // 用户端发起不用传\n\n    }).then(function (res) {\n      console.log(res);\n      resolve(res);\n    }).catch(function (err) {\n      console.log(err);\n      reject(err);\n    });\n  });\n}), _actions);\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/Users/Jiama003/Desktop/dist/src/store/modules/userInfo.js"],"names":["types","Api","state","accountID","headPic","nickName","sex","cityCode","getters","mutations","timeStamp","Date","parse","actions","GET_KF_INFO","Promise","resolve","reject","getKfInfo","then","res","console","log","catch","err","LIST_ORDER","data","listOrder","status","LIST_PUSH_ORDER","listPushOrder","UPDATE_ORDER","updateOrder","orderID","END_ORDER","o_id","endOrder","JOIN_CHANNEL","info","joinChannel","user_name","user_avatar","lng","lat","userType","channelID","INIT_ORDER","initOrder","GET_CHAT_LOG","getChatLog"],"mappings":"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","sourcesContent":["\nimport * as types from '../mutation-types'\nimport Api from '@/assets/js/api'\n\nconst state = {\n      accountID: 'hahahha',\n      headPic: '',\n      nickName: '',\n      sex: '',\n      cityCode: ''\n}\n//计算 state的过滤属性\nconst getters = {}\n\n//修改 state 状态\nconst mutations = {\n}\n//异步修改 state的状态\nlet  timeStamp = Date.parse (new Date ()) / 1000;\nconst actions = {\n  //获取个人信息\n   [types.GET_KF_INFO](state,accountID){\n      return new Promise((resolve,reject)=>{\n        Api.getKfInfo({\n          \"accountID\": accountID\n        }).then(res => {\n          console.log('res')\n          resolve(res)\n        })\n        .catch(err => {\n          console.log(err)\n          reject(err)\n        })\n      })\n  },\n  //获取服务单列表\n  [types.LIST_ORDER](state,data){\n    return new Promise((resolve,reject)=>{\n      // 如果有发起人\n      if(data.accountID){\n        Api.listOrder({\n          \"status\": data.status,\n          \"isKF\":'1',\n          \"accountID\":data.accountID\n        }).then(res => {\n          resolve(res)\n        })\n        .catch(err => {\n          console.log(err)\n          reject(err)\n        })\n\n      }else{\n        //没有发起人\n        Api.listOrder({\n          \"status\": data.status,\n          \"isKF\":'1'\n        }).then(res => {\n          resolve(res)\n        })\n        .catch(err => {\n          console.log(err)\n          reject(err)\n        })\n      }\n    })\n},\n//获取推送过来的服务单列表\n[types.LIST_PUSH_ORDER](state,data){\n  return new Promise((resolve,reject)=>{\n    // 如果有发起人\n      Api.listPushOrder({\n        \"status\": '0',\n        \"accountID\":data.accountID\n      }).then(res => {\n        resolve(res)\n      })\n      .catch(err => {\n        console.log(err)\n        reject(err)\n      })\n  })\n},\n[types.UPDATE_ORDER](state,data){\n  return new Promise((resolve,reject)=>{\n    Api.updateOrder({\n      \"orderID\": data.orderID,\n      \"kfID\":data.accountID\n    }).then(res => {\n      resolve(res)\n    })\n    .catch(err => {\n      console.log(err)\n      reject(err)\n    })\n  })\n},\n[types.END_ORDER](state,o_id){\n  return new Promise((resolve,reject)=>{\n    Api.endOrder({\n      \"orderID\": o_id\n    }).then(res => {\n      resolve(res)\n    })\n    .catch(err => {\n      console.log(err)\n      reject(err)\n    })\n  })\n},\n[types.JOIN_CHANNEL](state,info){\n  console.log('GET_USER_INFO===')\n  return new Promise((resolve,reject)=>{\n    Api.joinChannel({\n      \"userInfo\": {\n          \"accountID\": info.accountID, \n          \"nickName\": info.user_name, \n          \"headPic\": info.user_avatar,\n          \"lng\": info.lng,\n        \"lat\": info.lat, \n          \"userType\": info.userType //1 -用户 2 客服 3-合伙人 4 -互助\n      }, \n      \"channelID\": info.channelID,// 用户端发起不用传\n      \"orderID\":info.orderID\n  }).then(res => {\n      resolve(res)\n    })\n    .catch(err => {\n      console.log(err)\n      reject(err)\n    })\n  })\n},\n//获取频道用户列表\n// [types.CHANNEL_USER_LIST](state,channelID){\n//   console.log('CHANNEL_USER_LIST===')\n//   console.log(channelID)\n//   return new Promise((resolve,reject)=>{\n//     Api.channelUserList({\n//       \"channelID\": channelID// 用户端发起不用传\n//   }).then(res => {\n//       resolve(res)\n//     })\n//     .catch(err => {\n//       console.log(err)\n//       reject(err)\n//     })\n//   })\n// },\n\n//频道详情 初始化频道 返回频道用户列表\n[types.INIT_ORDER](state,data){\n  console.log('INIT_ORDER===')\n  console.log(data)\n  return new Promise((resolve,reject)=>{\n    Api.initOrder(data).then(res => {\n      resolve(res)\n    })\n    .catch(err => {\n      console.log(err)\n      reject(err)\n    })\n  })\n},\n//聊天记录\n[types.GET_CHAT_LOG](state,channelID){\n  return new Promise((resolve,reject)=>{\n    Api.getChatLog({\n      \"channelID\":channelID,// 用户端发起不用传\n  }).then(res => {\n    console.log(res)\n      resolve(res)\n    })\n    .catch(err => {\n      console.log(err)\n      reject(err)\n    })\n  })\n},\n}\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n\n}"]}]}