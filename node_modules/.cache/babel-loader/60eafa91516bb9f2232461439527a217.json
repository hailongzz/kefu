{"remainingRequest":"/Users/Jiama003/company/kfservices/node_modules/thread-loader/dist/cjs.js!/Users/Jiama003/company/kfservices/node_modules/babel-loader/lib/index.js!/Users/Jiama003/company/kfservices/node_modules/eslint-loader/index.js??ref--13-0!/Users/Jiama003/company/kfservices/src/store/modules/userInfo.js","dependencies":[{"path":"/Users/Jiama003/company/kfservices/src/store/modules/userInfo.js","mtime":1560410332498},{"path":"/Users/Jiama003/company/kfservices/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Jiama003/company/kfservices/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Jiama003/company/kfservices/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Jiama003/company/kfservices/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/Jiama003/company/kfservices/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _actions;\n\nimport * as types from \"../mutation-types\";\nimport Api from '@/assets/js/api';\nvar state = {\n  accountID: 'hahahha',\n  headPic: '',\n  nickName: '',\n  sex: '',\n  cityCode: '' //计算 state的过滤属性\n\n};\nvar getters = {}; //修改 state 状态\n\nvar mutations = {}; //异步修改 state的状态\n\nvar timeStamp = Date.parse(new Date()) / 1000;\nvar actions = (_actions = {}, _defineProperty(_actions, types.GET_KF_INFO, function (state, accountID) {\n  return new Promise(function (resolve, reject) {\n    Api.getKfInfo({\n      \"accountID\": accountID\n    }).then(function (res) {\n      console.log('res');\n      resolve(res);\n    }).catch(function (err) {\n      console.log(err);\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, types.LIST_ORDER, function (state, data) {\n  return new Promise(function (resolve, reject) {\n    // 如果有发起人\n    if (data.accountID) {\n      Api.listOrder({\n        \"status\": data.status,\n        \"isKF\": '1',\n        \"accountID\": data.accountID\n      }).then(function (res) {\n        resolve(res);\n      }).catch(function (err) {\n        console.log(err);\n        reject(err);\n      });\n    } else {\n      //没有发起人\n      Api.listOrder({\n        \"status\": data.status,\n        \"isKF\": '1'\n      }).then(function (res) {\n        resolve(res);\n      }).catch(function (err) {\n        console.log(err);\n        reject(err);\n      });\n    }\n  });\n}), _defineProperty(_actions, types.LIST_PUSH_ORDER, function (state, data) {\n  return new Promise(function (resolve, reject) {\n    // 如果有发起人\n    Api.listPushOrder({\n      \"userStatus\": '0',\n      \"orderStatus\": '0',\n      \"accountID\": data.accountID\n    }).then(function (res) {\n      resolve(res);\n    }).catch(function (err) {\n      console.log(err);\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, types.UPDATE_ORDER, function (state, data) {\n  return new Promise(function (resolve, reject) {\n    Api.updateOrder(data).then(function (res) {\n      resolve(res);\n    }).catch(function (err) {\n      console.log(err);\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, types.END_ORDER, function (state, o_id) {\n  return new Promise(function (resolve, reject) {\n    Api.endOrder({\n      \"orderID\": o_id\n    }).then(function (res) {\n      resolve(res);\n    }).catch(function (err) {\n      console.log(err);\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, types.OUT_KF_CHANNEL, function (state, data) {\n  //客服退出频道\n  return new Promise(function (resolve, reject) {\n    Api.outKfChannel(data).then(function (res) {\n      resolve(res);\n    }).catch(function (err) {\n      console.log(err);\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, types.JOIN_CHANNEL, function (state, info) {\n  console.log('GET_USER_INFO===');\n  return new Promise(function (resolve, reject) {\n    Api.joinChannel({\n      \"userInfo\": {\n        \"accountID\": info.accountID,\n        \"nickName\": info.user_name,\n        \"headPic\": info.user_avatar,\n        \"lng\": info.lng,\n        \"lat\": info.lat,\n        \"userType\": info.userType //1 -用户 2 客服 3-合伙人 4 -互助\n\n      },\n      \"channelID\": info.channelID,\n      // 用户端发起不用传\n      \"orderID\": info.orderID\n    }).then(function (res) {\n      resolve(res);\n    }).catch(function (err) {\n      console.log(err);\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, types.INIT_ORDER, function (state, data) {\n  console.log('INIT_ORDER===');\n  console.log(data);\n  return new Promise(function (resolve, reject) {\n    Api.initOrder(data).then(function (res) {\n      resolve(res);\n    }).catch(function (err) {\n      console.log(err);\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, types.GET_CHAT_LOG, function (state, data) {\n  return new Promise(function (resolve, reject) {\n    Api.getChatLog(data).then(function (res) {\n      console.log(res);\n      resolve(res);\n    }).catch(function (err) {\n      console.log(err);\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, types.ADD_CHAT_LOG, function (state, data) {\n  return new Promise(function (resolve, reject) {\n    Api.addChatLog(data).then(function (res) {\n      console.log(res);\n      resolve(res);\n    }).catch(function (err) {\n      console.log(err);\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, types.UPLOAD_OSS_IMG, function (state, data) {\n  return new Promise(function (resolve, reject) {\n    Api.uploadOssImg(data).then(function (res) {\n      console.log(res);\n      resolve(res);\n    }).catch(function (err) {\n      console.log(err);\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, types.UPLOAD_OSS_FILE, function (state, data) {\n  return new Promise(function (resolve, reject) {\n    Api.uploadOssFile(data).then(function (res) {\n      console.log(res);\n      resolve(res);\n    }).catch(function (err) {\n      console.log(err);\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, types.REFRESH_MSG_TOKEN, function (state, data) {\n  return new Promise(function (resolve, reject) {\n    Api.refreshMsgToken(data).then(function (res) {\n      console.log(res);\n      resolve(res);\n    }).catch(function (err) {\n      console.log(err);\n      reject(err);\n    });\n  });\n}), _actions);\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/Users/Jiama003/company/kfservices/src/store/modules/userInfo.js"],"names":["types","Api","state","accountID","headPic","nickName","sex","cityCode","getters","mutations","timeStamp","Date","parse","actions","GET_KF_INFO","Promise","resolve","reject","getKfInfo","then","res","console","log","catch","err","LIST_ORDER","data","listOrder","status","LIST_PUSH_ORDER","listPushOrder","UPDATE_ORDER","updateOrder","END_ORDER","o_id","endOrder","OUT_KF_CHANNEL","outKfChannel","JOIN_CHANNEL","info","joinChannel","user_name","user_avatar","lng","lat","userType","channelID","orderID","INIT_ORDER","initOrder","GET_CHAT_LOG","getChatLog","ADD_CHAT_LOG","addChatLog","UPLOAD_OSS_IMG","uploadOssImg","UPLOAD_OSS_FILE","uploadOssFile","REFRESH_MSG_TOKEN","refreshMsgToken"],"mappings":"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","sourcesContent":["\nimport * as types from '../mutation-types'\nimport Api from '@/assets/js/api'\n\nconst state = {\n      accountID: 'hahahha',\n      headPic: '',\n      nickName: '',\n      sex: '',\n      cityCode: ''\n}\n//计算 state的过滤属性\nconst getters = {}\n\n//修改 state 状态\nconst mutations = {\n}\n//异步修改 state的状态\nlet  timeStamp = Date.parse (new Date ()) / 1000;\nconst actions = {\n  //获取个人信息\n   [types.GET_KF_INFO](state,accountID){\n      return new Promise((resolve,reject)=>{\n        Api.getKfInfo({\n          \"accountID\": accountID\n        }).then(res => {\n          console.log('res')\n          resolve(res)\n        })\n        .catch(err => {\n          console.log(err)\n          reject(err)\n        })\n      })\n  },\n  //获取服务单列表\n  [types.LIST_ORDER](state,data){\n    return new Promise((resolve,reject)=>{\n      // 如果有发起人\n      if(data.accountID){\n        Api.listOrder({\n          \"status\": data.status,\n          \"isKF\":'1',\n          \"accountID\":data.accountID\n        }).then(res => {\n          resolve(res)\n        })\n        .catch(err => {\n          console.log(err)\n          reject(err)\n        })\n\n      }else{\n        //没有发起人\n        Api.listOrder({\n          \"status\": data.status,\n          \"isKF\":'1'\n        }).then(res => {\n          resolve(res)\n        })\n        .catch(err => {\n          console.log(err)\n          reject(err)\n        })\n      }\n    })\n},\n//获取推送过来的服务单列表\n[types.LIST_PUSH_ORDER](state,data){\n  return new Promise((resolve,reject)=>{\n    // 如果有发起人\n      Api.listPushOrder({\n        \"userStatus\":'0',\n        \"orderStatus\": '0',\n        \"accountID\":data.accountID\n      }).then(res => {\n        resolve(res)\n      })\n      .catch(err => {\n        console.log(err)\n        reject(err)\n      })\n  })\n},\n[types.UPDATE_ORDER](state,data){\n  return new Promise((resolve,reject)=>{\n    Api.updateOrder(data).then(res => {\n      resolve(res)\n    })\n    .catch(err => {\n      console.log(err)\n      reject(err)\n    })\n  })\n},\n[types.END_ORDER](state,o_id){\n  return new Promise((resolve,reject)=>{\n    Api.endOrder({\n      \"orderID\": o_id\n    }).then(res => {\n      resolve(res)\n    })\n    .catch(err => {\n      console.log(err)\n      reject(err)\n    })\n  })\n},\n[types.OUT_KF_CHANNEL](state,data){ //客服退出频道\n  return new Promise((resolve,reject)=>{\n    Api.outKfChannel(data).then(res => {\n      resolve(res)\n    })\n    .catch(err => {\n      console.log(err)\n      reject(err)\n    })\n  })\n},\n[types.JOIN_CHANNEL](state,info){\n  console.log('GET_USER_INFO===')\n  return new Promise((resolve,reject)=>{\n    Api.joinChannel({\n      \"userInfo\": {\n          \"accountID\": info.accountID, \n          \"nickName\": info.user_name, \n          \"headPic\": info.user_avatar,\n          \"lng\": info.lng,\n        \"lat\": info.lat, \n          \"userType\": info.userType //1 -用户 2 客服 3-合伙人 4 -互助\n      }, \n      \"channelID\": info.channelID,// 用户端发起不用传\n      \"orderID\":info.orderID\n  }).then(res => {\n      resolve(res)\n    })\n    .catch(err => {\n      console.log(err)\n      reject(err)\n    })\n  })\n},\n//获取频道用户列表\n// [types.CHANNEL_USER_LIST](state,channelID){\n//   console.log('CHANNEL_USER_LIST===')\n//   console.log(channelID)\n//   return new Promise((resolve,reject)=>{\n//     Api.channelUserList({\n//       \"channelID\": channelID// 用户端发起不用传\n//   }).then(res => {\n//       resolve(res)\n//     })\n//     .catch(err => {\n//       console.log(err)\n//       reject(err)\n//     })\n//   })\n// },\n\n//频道详情 初始化频道 返回频道用户列表\n[types.INIT_ORDER](state,data){\n  console.log('INIT_ORDER===')\n  console.log(data)\n  return new Promise((resolve,reject)=>{\n    Api.initOrder(data).then(res => {\n      resolve(res)\n    })\n    .catch(err => {\n      console.log(err)\n      reject(err)\n    })\n  })\n},\n//聊天记录\n[types.GET_CHAT_LOG](state,data){\n  return new Promise((resolve,reject)=>{\n    Api.getChatLog(data).then(res => {\n      console.log(res)\n      resolve(res)\n    }).catch(err => {\n      console.log(err)\n      reject(err)\n    })\n  })\n},\n//保存聊天记录\n[types.ADD_CHAT_LOG](state,data){\n  return new Promise((resolve,reject)=>{\n    Api.addChatLog(data).then(res => {\n      console.log(res)\n      resolve(res)\n    }).catch(err => {\n      console.log(err)\n      reject(err)\n    })\n  })\n},\n//上传图片\n[types.UPLOAD_OSS_IMG](state,data){\n  return new Promise((resolve,reject)=>{\n    Api.uploadOssImg(data).then(res => {\n      console.log(res)\n      resolve(res)\n    }).catch(err => {\n      console.log(err)\n      reject(err)\n    })\n  })\n},\n//上传音频\n[types.UPLOAD_OSS_FILE](state,data){\n  return new Promise((resolve,reject)=>{\n    Api.uploadOssFile(data).then(res => {\n      console.log(res)\n      resolve(res)\n    }).catch(err => {\n      console.log(err)\n      reject(err)\n    })\n  })\n},\n\n//上传音频\n[types.REFRESH_MSG_TOKEN](state,data){\n  return new Promise((resolve,reject)=>{\n    Api.refreshMsgToken(data).then(res => {\n      console.log(res)\n      resolve(res)\n    }).catch(err => {\n      console.log(err)\n      reject(err)\n    })\n  })\n},\n}\n\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n\n}"]}]}